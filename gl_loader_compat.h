#pragma once

#define WIN32_LEAN_AND_MEAN
#include <windows.h>
#include <gl/gl.h>
#include <glext.h>


typedef void (*PFN_apiproc)(void);
typedef PFN_apiproc (*PFN_loadfunc)(const char *name);
void* get_gl_func_address_name(const char* name);
typedef void (APIENTRYP PFNGLACCUMPROC) (GLenum op, GLfloat value);
typedef void (APIENTRYP PFNGLALPHAFUNCPROC) (GLenum func, GLclampf ref);
typedef GLboolean (APIENTRYP PFNGLARETEXTURESRESIDENTPROC) (GLsizei n, const GLuint *textures, GLboolean *residences);
typedef void (APIENTRYP PFNGLARRAYELEMENTPROC) (GLint i);
typedef void (APIENTRYP PFNGLBEGINPROC) (GLenum mode);
typedef void (APIENTRYP PFNGLBINDTEXTUREPROC) (GLenum target, GLuint texture);
typedef void (APIENTRYP PFNGLBITMAPPROC) (GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap);
typedef void (APIENTRYP PFNGLBLENDFUNCPROC) (GLenum sfactor, GLenum dfactor);
typedef void (APIENTRYP PFNGLCALLLISTPROC) (GLuint list);
typedef void (APIENTRYP PFNGLCALLLISTSPROC) (GLsizei n, GLenum type, const GLvoid *lists);
typedef void (APIENTRYP PFNGLCLEARPROC) (GLbitfield mask);
typedef void (APIENTRYP PFNGLCLEARACCUMPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (APIENTRYP PFNGLCLEARCOLORPROC) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
typedef void (APIENTRYP PFNGLCLEARDEPTHPROC) (GLclampd depth);
typedef void (APIENTRYP PFNGLCLEARINDEXPROC) (GLfloat c);
typedef void (APIENTRYP PFNGLCLEARSTENCILPROC) (GLint s);
typedef void (APIENTRYP PFNGLCLIPPLANEPROC) (GLenum plane, const GLdouble *equation);
typedef void (APIENTRYP PFNGLCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);
typedef void (APIENTRYP PFNGLCOLOR3BVPROC) (const GLbyte *v);
typedef void (APIENTRYP PFNGLCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue);
typedef void (APIENTRYP PFNGLCOLOR3DVPROC) (const GLdouble *v);
typedef void (APIENTRYP PFNGLCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);
typedef void (APIENTRYP PFNGLCOLOR3FVPROC) (const GLfloat *v);
typedef void (APIENTRYP PFNGLCOLOR3IPROC) (GLint red, GLint green, GLint blue);
typedef void (APIENTRYP PFNGLCOLOR3IVPROC) (const GLint *v);
typedef void (APIENTRYP PFNGLCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);
typedef void (APIENTRYP PFNGLCOLOR3SVPROC) (const GLshort *v);
typedef void (APIENTRYP PFNGLCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);
typedef void (APIENTRYP PFNGLCOLOR3UBVPROC) (const GLubyte *v);
typedef void (APIENTRYP PFNGLCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);
typedef void (APIENTRYP PFNGLCOLOR3UIVPROC) (const GLuint *v);
typedef void (APIENTRYP PFNGLCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue);
typedef void (APIENTRYP PFNGLCOLOR3USVPROC) (const GLushort *v);
typedef void (APIENTRYP PFNGLCOLOR4BPROC) (GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
typedef void (APIENTRYP PFNGLCOLOR4BVPROC) (const GLbyte *v);
typedef void (APIENTRYP PFNGLCOLOR4DPROC) (GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
typedef void (APIENTRYP PFNGLCOLOR4DVPROC) (const GLdouble *v);
typedef void (APIENTRYP PFNGLCOLOR4FPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (APIENTRYP PFNGLCOLOR4FVPROC) (const GLfloat *v);
typedef void (APIENTRYP PFNGLCOLOR4IPROC) (GLint red, GLint green, GLint blue, GLint alpha);
typedef void (APIENTRYP PFNGLCOLOR4IVPROC) (const GLint *v);
typedef void (APIENTRYP PFNGLCOLOR4SPROC) (GLshort red, GLshort green, GLshort blue, GLshort alpha);
typedef void (APIENTRYP PFNGLCOLOR4SVPROC) (const GLshort *v);
typedef void (APIENTRYP PFNGLCOLOR4UBPROC) (GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
typedef void (APIENTRYP PFNGLCOLOR4UBVPROC) (const GLubyte *v);
typedef void (APIENTRYP PFNGLCOLOR4UIPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
typedef void (APIENTRYP PFNGLCOLOR4UIVPROC) (const GLuint *v);
typedef void (APIENTRYP PFNGLCOLOR4USPROC) (GLushort red, GLushort green, GLushort blue, GLushort alpha);
typedef void (APIENTRYP PFNGLCOLOR4USVPROC) (const GLushort *v);
typedef void (APIENTRYP PFNGLCOLORMASKPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
typedef void (APIENTRYP PFNGLCOLORMATERIALPROC) (GLenum face, GLenum mode);
typedef void (APIENTRYP PFNGLCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
typedef void (APIENTRYP PFNGLCOPYPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLCULLFACEPROC) (GLenum mode);
typedef void (APIENTRYP PFNGLDELETELISTSPROC) (GLuint list, GLsizei range);
typedef void (APIENTRYP PFNGLDELETETEXTURESPROC) (GLsizei n, const GLuint *textures);
typedef void (APIENTRYP PFNGLDEPTHFUNCPROC) (GLenum func);
typedef void (APIENTRYP PFNGLDEPTHMASKPROC) (GLboolean flag);
typedef void (APIENTRYP PFNGLDEPTHRANGEPROC) (GLclampd zNear, GLclampd zFar);
typedef void (APIENTRYP PFNGLDISABLEPROC) (GLenum cap);
typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEPROC) (GLenum array);
typedef void (APIENTRYP PFNGLDRAWARRAYSPROC) (GLenum mode, GLint first, GLsizei count);
typedef void (APIENTRYP PFNGLDRAWBUFFERPROC) (GLenum mode);
typedef void (APIENTRYP PFNGLDRAWELEMENTSPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices);
typedef void (APIENTRYP PFNGLDRAWPIXELSPROC) (GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (APIENTRYP PFNGLEDGEFLAGPROC) (GLboolean flag);
typedef void (APIENTRYP PFNGLEDGEFLAGPOINTERPROC) (GLsizei stride, const GLvoid *pointer);
typedef void (APIENTRYP PFNGLEDGEFLAGVPROC) (const GLboolean *flag);
typedef void (APIENTRYP PFNGLENABLEPROC) (GLenum cap);
typedef void (APIENTRYP PFNGLENABLECLIENTSTATEPROC) (GLenum array);
typedef void (APIENTRYP PFNGLENDPROC) (void);
typedef void (APIENTRYP PFNGLENDLISTPROC) (void);
typedef void (APIENTRYP PFNGLEVALCOORD1DPROC) (GLdouble u);
typedef void (APIENTRYP PFNGLEVALCOORD1DVPROC) (const GLdouble *u);
typedef void (APIENTRYP PFNGLEVALCOORD1FPROC) (GLfloat u);
typedef void (APIENTRYP PFNGLEVALCOORD1FVPROC) (const GLfloat *u);
typedef void (APIENTRYP PFNGLEVALCOORD2DPROC) (GLdouble u, GLdouble v);
typedef void (APIENTRYP PFNGLEVALCOORD2DVPROC) (const GLdouble *u);
typedef void (APIENTRYP PFNGLEVALCOORD2FPROC) (GLfloat u, GLfloat v);
typedef void (APIENTRYP PFNGLEVALCOORD2FVPROC) (const GLfloat *u);
typedef void (APIENTRYP PFNGLEVALMESH1PROC) (GLenum mode, GLint i1, GLint i2);
typedef void (APIENTRYP PFNGLEVALMESH2PROC) (GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
typedef void (APIENTRYP PFNGLEVALPOINT1PROC) (GLint i);
typedef void (APIENTRYP PFNGLEVALPOINT2PROC) (GLint i, GLint j);
typedef void (APIENTRYP PFNGLFEEDBACKBUFFERPROC) (GLsizei size, GLenum type, GLfloat *buffer);
typedef void (APIENTRYP PFNGLFINISHPROC) (void);
typedef void (APIENTRYP PFNGLFLUSHPROC) (void);
typedef void (APIENTRYP PFNGLFOGFPROC) (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLFOGFVPROC) (GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLFOGIPROC) (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLFOGIVPROC) (GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLFRONTFACEPROC) (GLenum mode);
typedef void (APIENTRYP PFNGLFRUSTUMPROC) (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef GLuint (APIENTRYP PFNGLGENLISTSPROC) (GLsizei range);
typedef void (APIENTRYP PFNGLGENTEXTURESPROC) (GLsizei n, GLuint *textures);
typedef void (APIENTRYP PFNGLGETBOOLEANVPROC) (GLenum pname, GLboolean *params);
typedef void (APIENTRYP PFNGLGETCLIPPLANEPROC) (GLenum plane, GLdouble *equation);
typedef void (APIENTRYP PFNGLGETDOUBLEVPROC) (GLenum pname, GLdouble *params);
typedef GLenum (APIENTRYP PFNGLGETERRORPROC) (void);
typedef void (APIENTRYP PFNGLGETFLOATVPROC) (GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETINTEGERVPROC) (GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETLIGHTFVPROC) (GLenum light, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETLIGHTIVPROC) (GLenum light, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETMAPDVPROC) (GLenum target, GLenum query, GLdouble *v);
typedef void (APIENTRYP PFNGLGETMAPFVPROC) (GLenum target, GLenum query, GLfloat *v);
typedef void (APIENTRYP PFNGLGETMAPIVPROC) (GLenum target, GLenum query, GLint *v);
typedef void (APIENTRYP PFNGLGETMATERIALFVPROC) (GLenum face, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETMATERIALIVPROC) (GLenum face, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETPIXELMAPFVPROC) (GLenum map, GLfloat *values);
typedef void (APIENTRYP PFNGLGETPIXELMAPUIVPROC) (GLenum map, GLuint *values);
typedef void (APIENTRYP PFNGLGETPIXELMAPUSVPROC) (GLenum map, GLushort *values);
typedef void (APIENTRYP PFNGLGETPOINTERVPROC) (GLenum pname, GLvoid* *params);
typedef void (APIENTRYP PFNGLGETPOLYGONSTIPPLEPROC) (GLubyte *mask);
typedef const GLubyte * (APIENTRYP PFNGLGETSTRINGPROC) (GLenum name);
typedef void (APIENTRYP PFNGLGETTEXENVFVPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETTEXENVIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETTEXGENDVPROC) (GLenum coord, GLenum pname, GLdouble *params);
typedef void (APIENTRYP PFNGLGETTEXGENFVPROC) (GLenum coord, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETTEXGENIVPROC) (GLenum coord, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);
typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERFVPROC) (GLenum target, GLint level, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERIVPROC) (GLenum target, GLint level, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLGETTEXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (APIENTRYP PFNGLGETTEXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (APIENTRYP PFNGLHINTPROC) (GLenum target, GLenum mode);
typedef void (APIENTRYP PFNGLINDEXMASKPROC) (GLuint mask);
typedef void (APIENTRYP PFNGLINDEXPOINTERPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
typedef void (APIENTRYP PFNGLINDEXDPROC) (GLdouble c);
typedef void (APIENTRYP PFNGLINDEXDVPROC) (const GLdouble *c);
typedef void (APIENTRYP PFNGLINDEXFPROC) (GLfloat c);
typedef void (APIENTRYP PFNGLINDEXFVPROC) (const GLfloat *c);
typedef void (APIENTRYP PFNGLINDEXIPROC) (GLint c);
typedef void (APIENTRYP PFNGLINDEXIVPROC) (const GLint *c);
typedef void (APIENTRYP PFNGLINDEXSPROC) (GLshort c);
typedef void (APIENTRYP PFNGLINDEXSVPROC) (const GLshort *c);
typedef void (APIENTRYP PFNGLINDEXUBPROC) (GLubyte c);
typedef void (APIENTRYP PFNGLINDEXUBVPROC) (const GLubyte *c);
typedef void (APIENTRYP PFNGLINITNAMESPROC) (void);
typedef void (APIENTRYP PFNGLINTERLEAVEDARRAYSPROC) (GLenum format, GLsizei stride, const GLvoid *pointer);
typedef GLboolean (APIENTRYP PFNGLISENABLEDPROC) (GLenum cap);
typedef GLboolean (APIENTRYP PFNGLISLISTPROC) (GLuint list);
typedef GLboolean (APIENTRYP PFNGLISTEXTUREPROC) (GLuint texture);
typedef void (APIENTRYP PFNGLLIGHTMODELFPROC) (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLLIGHTMODELFVPROC) (GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLLIGHTMODELIPROC) (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLLIGHTMODELIVPROC) (GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLLIGHTFPROC) (GLenum light, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLLIGHTFVPROC) (GLenum light, GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLLIGHTIPROC) (GLenum light, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLLIGHTIVPROC) (GLenum light, GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLLINESTIPPLEPROC) (GLint factor, GLushort pattern);
typedef void (APIENTRYP PFNGLLINEWIDTHPROC) (GLfloat width);
typedef void (APIENTRYP PFNGLLISTBASEPROC) (GLuint base);
typedef void (APIENTRYP PFNGLLOADIDENTITYPROC) (void);
typedef void (APIENTRYP PFNGLLOADMATRIXDPROC) (const GLdouble *m);
typedef void (APIENTRYP PFNGLLOADMATRIXFPROC) (const GLfloat *m);
typedef void (APIENTRYP PFNGLLOADNAMEPROC) (GLuint name);
typedef void (APIENTRYP PFNGLLOGICOPPROC) (GLenum opcode);
typedef void (APIENTRYP PFNGLMAP1DPROC) (GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);
typedef void (APIENTRYP PFNGLMAP1FPROC) (GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
typedef void (APIENTRYP PFNGLMAP2DPROC) (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
typedef void (APIENTRYP PFNGLMAP2FPROC) (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);
typedef void (APIENTRYP PFNGLMAPGRID1DPROC) (GLint un, GLdouble u1, GLdouble u2);
typedef void (APIENTRYP PFNGLMAPGRID1FPROC) (GLint un, GLfloat u1, GLfloat u2);
typedef void (APIENTRYP PFNGLMAPGRID2DPROC) (GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
typedef void (APIENTRYP PFNGLMAPGRID2FPROC) (GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
typedef void (APIENTRYP PFNGLMATERIALFPROC) (GLenum face, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLMATERIALFVPROC) (GLenum face, GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLMATERIALIPROC) (GLenum face, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLMATERIALIVPROC) (GLenum face, GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLMATRIXMODEPROC) (GLenum mode);
typedef void (APIENTRYP PFNGLMULTMATRIXDPROC) (const GLdouble *m);
typedef void (APIENTRYP PFNGLMULTMATRIXFPROC) (const GLfloat *m);
typedef void (APIENTRYP PFNGLNEWLISTPROC) (GLuint list, GLenum mode);
typedef void (APIENTRYP PFNGLNORMAL3BPROC) (GLbyte nx, GLbyte ny, GLbyte nz);
typedef void (APIENTRYP PFNGLNORMAL3BVPROC) (const GLbyte *v);
typedef void (APIENTRYP PFNGLNORMAL3DPROC) (GLdouble nx, GLdouble ny, GLdouble nz);
typedef void (APIENTRYP PFNGLNORMAL3DVPROC) (const GLdouble *v);
typedef void (APIENTRYP PFNGLNORMAL3FPROC) (GLfloat nx, GLfloat ny, GLfloat nz);
typedef void (APIENTRYP PFNGLNORMAL3FVPROC) (const GLfloat *v);
typedef void (APIENTRYP PFNGLNORMAL3IPROC) (GLint nx, GLint ny, GLint nz);
typedef void (APIENTRYP PFNGLNORMAL3IVPROC) (const GLint *v);
typedef void (APIENTRYP PFNGLNORMAL3SPROC) (GLshort nx, GLshort ny, GLshort nz);
typedef void (APIENTRYP PFNGLNORMAL3SVPROC) (const GLshort *v);
typedef void (APIENTRYP PFNGLNORMALPOINTERPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
typedef void (APIENTRYP PFNGLORTHOPROC) (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (APIENTRYP PFNGLPASSTHROUGHPROC) (GLfloat token);
typedef void (APIENTRYP PFNGLPIXELMAPFVPROC) (GLenum map, GLsizei mapsize, const GLfloat *values);
typedef void (APIENTRYP PFNGLPIXELMAPUIVPROC) (GLenum map, GLsizei mapsize, const GLuint *values);
typedef void (APIENTRYP PFNGLPIXELMAPUSVPROC) (GLenum map, GLsizei mapsize, const GLushort *values);
typedef void (APIENTRYP PFNGLPIXELSTOREFPROC) (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLPIXELSTOREIPROC) (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLPIXELTRANSFERFPROC) (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLPIXELTRANSFERIPROC) (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLPIXELZOOMPROC) (GLfloat xfactor, GLfloat yfactor);
typedef void (APIENTRYP PFNGLPOINTSIZEPROC) (GLfloat size);
typedef void (APIENTRYP PFNGLPOLYGONMODEPROC) (GLenum face, GLenum mode);
typedef void (APIENTRYP PFNGLPOLYGONOFFSETPROC) (GLfloat factor, GLfloat units);
typedef void (APIENTRYP PFNGLPOLYGONSTIPPLEPROC) (const GLubyte *mask);
typedef void (APIENTRYP PFNGLPOPATTRIBPROC) (void);
typedef void (APIENTRYP PFNGLPOPCLIENTATTRIBPROC) (void);
typedef void (APIENTRYP PFNGLPOPMATRIXPROC) (void);
typedef void (APIENTRYP PFNGLPOPNAMEPROC) (void);
typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESPROC) (GLsizei n, const GLuint *textures, const GLclampf *priorities);
typedef void (APIENTRYP PFNGLPUSHATTRIBPROC) (GLbitfield mask);
typedef void (APIENTRYP PFNGLPUSHCLIENTATTRIBPROC) (GLbitfield mask);
typedef void (APIENTRYP PFNGLPUSHMATRIXPROC) (void);
typedef void (APIENTRYP PFNGLPUSHNAMEPROC) (GLuint name);
typedef void (APIENTRYP PFNGLRASTERPOS2DPROC) (GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLRASTERPOS2DVPROC) (const GLdouble *v);
typedef void (APIENTRYP PFNGLRASTERPOS2FPROC) (GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLRASTERPOS2FVPROC) (const GLfloat *v);
typedef void (APIENTRYP PFNGLRASTERPOS2IPROC) (GLint x, GLint y);
typedef void (APIENTRYP PFNGLRASTERPOS2IVPROC) (const GLint *v);
typedef void (APIENTRYP PFNGLRASTERPOS2SPROC) (GLshort x, GLshort y);
typedef void (APIENTRYP PFNGLRASTERPOS2SVPROC) (const GLshort *v);
typedef void (APIENTRYP PFNGLRASTERPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLRASTERPOS3DVPROC) (const GLdouble *v);
typedef void (APIENTRYP PFNGLRASTERPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLRASTERPOS3FVPROC) (const GLfloat *v);
typedef void (APIENTRYP PFNGLRASTERPOS3IPROC) (GLint x, GLint y, GLint z);
typedef void (APIENTRYP PFNGLRASTERPOS3IVPROC) (const GLint *v);
typedef void (APIENTRYP PFNGLRASTERPOS3SPROC) (GLshort x, GLshort y, GLshort z);
typedef void (APIENTRYP PFNGLRASTERPOS3SVPROC) (const GLshort *v);
typedef void (APIENTRYP PFNGLRASTERPOS4DPROC) (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLRASTERPOS4DVPROC) (const GLdouble *v);
typedef void (APIENTRYP PFNGLRASTERPOS4FPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLRASTERPOS4FVPROC) (const GLfloat *v);
typedef void (APIENTRYP PFNGLRASTERPOS4IPROC) (GLint x, GLint y, GLint z, GLint w);
typedef void (APIENTRYP PFNGLRASTERPOS4IVPROC) (const GLint *v);
typedef void (APIENTRYP PFNGLRASTERPOS4SPROC) (GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (APIENTRYP PFNGLRASTERPOS4SVPROC) (const GLshort *v);
typedef void (APIENTRYP PFNGLREADBUFFERPROC) (GLenum mode);
typedef void (APIENTRYP PFNGLREADPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels);
typedef void (APIENTRYP PFNGLRECTDPROC) (GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
typedef void (APIENTRYP PFNGLRECTDVPROC) (const GLdouble *v1, const GLdouble *v2);
typedef void (APIENTRYP PFNGLRECTFPROC) (GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
typedef void (APIENTRYP PFNGLRECTFVPROC) (const GLfloat *v1, const GLfloat *v2);
typedef void (APIENTRYP PFNGLRECTIPROC) (GLint x1, GLint y1, GLint x2, GLint y2);
typedef void (APIENTRYP PFNGLRECTIVPROC) (const GLint *v1, const GLint *v2);
typedef void (APIENTRYP PFNGLRECTSPROC) (GLshort x1, GLshort y1, GLshort x2, GLshort y2);
typedef void (APIENTRYP PFNGLRECTSVPROC) (const GLshort *v1, const GLshort *v2);
typedef GLint (APIENTRYP PFNGLRENDERMODEPROC) (GLenum mode);
typedef void (APIENTRYP PFNGLROTATEDPROC) (GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLROTATEFPROC) (GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLSCALEDPROC) (GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLSCALEFPROC) (GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLSCISSORPROC) (GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLSELECTBUFFERPROC) (GLsizei size, GLuint *buffer);
typedef void (APIENTRYP PFNGLSHADEMODELPROC) (GLenum mode);
typedef void (APIENTRYP PFNGLSTENCILFUNCPROC) (GLenum func, GLint ref, GLuint mask);
typedef void (APIENTRYP PFNGLSTENCILMASKPROC) (GLuint mask);
typedef void (APIENTRYP PFNGLSTENCILOPPROC) (GLenum fail, GLenum zfail, GLenum zpass);
typedef void (APIENTRYP PFNGLTEXCOORD1DPROC) (GLdouble s);
typedef void (APIENTRYP PFNGLTEXCOORD1DVPROC) (const GLdouble *v);
typedef void (APIENTRYP PFNGLTEXCOORD1FPROC) (GLfloat s);
typedef void (APIENTRYP PFNGLTEXCOORD1FVPROC) (const GLfloat *v);
typedef void (APIENTRYP PFNGLTEXCOORD1IPROC) (GLint s);
typedef void (APIENTRYP PFNGLTEXCOORD1IVPROC) (const GLint *v);
typedef void (APIENTRYP PFNGLTEXCOORD1SPROC) (GLshort s);
typedef void (APIENTRYP PFNGLTEXCOORD1SVPROC) (const GLshort *v);
typedef void (APIENTRYP PFNGLTEXCOORD2DPROC) (GLdouble s, GLdouble t);
typedef void (APIENTRYP PFNGLTEXCOORD2DVPROC) (const GLdouble *v);
typedef void (APIENTRYP PFNGLTEXCOORD2FPROC) (GLfloat s, GLfloat t);
typedef void (APIENTRYP PFNGLTEXCOORD2FVPROC) (const GLfloat *v);
typedef void (APIENTRYP PFNGLTEXCOORD2IPROC) (GLint s, GLint t);
typedef void (APIENTRYP PFNGLTEXCOORD2IVPROC) (const GLint *v);
typedef void (APIENTRYP PFNGLTEXCOORD2SPROC) (GLshort s, GLshort t);
typedef void (APIENTRYP PFNGLTEXCOORD2SVPROC) (const GLshort *v);
typedef void (APIENTRYP PFNGLTEXCOORD3DPROC) (GLdouble s, GLdouble t, GLdouble r);
typedef void (APIENTRYP PFNGLTEXCOORD3DVPROC) (const GLdouble *v);
typedef void (APIENTRYP PFNGLTEXCOORD3FPROC) (GLfloat s, GLfloat t, GLfloat r);
typedef void (APIENTRYP PFNGLTEXCOORD3FVPROC) (const GLfloat *v);
typedef void (APIENTRYP PFNGLTEXCOORD3IPROC) (GLint s, GLint t, GLint r);
typedef void (APIENTRYP PFNGLTEXCOORD3IVPROC) (const GLint *v);
typedef void (APIENTRYP PFNGLTEXCOORD3SPROC) (GLshort s, GLshort t, GLshort r);
typedef void (APIENTRYP PFNGLTEXCOORD3SVPROC) (const GLshort *v);
typedef void (APIENTRYP PFNGLTEXCOORD4DPROC) (GLdouble s, GLdouble t, GLdouble r, GLdouble q);
typedef void (APIENTRYP PFNGLTEXCOORD4DVPROC) (const GLdouble *v);
typedef void (APIENTRYP PFNGLTEXCOORD4FPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat q);
typedef void (APIENTRYP PFNGLTEXCOORD4FVPROC) (const GLfloat *v);
typedef void (APIENTRYP PFNGLTEXCOORD4IPROC) (GLint s, GLint t, GLint r, GLint q);
typedef void (APIENTRYP PFNGLTEXCOORD4IVPROC) (const GLint *v);
typedef void (APIENTRYP PFNGLTEXCOORD4SPROC) (GLshort s, GLshort t, GLshort r, GLshort q);
typedef void (APIENTRYP PFNGLTEXCOORD4SVPROC) (const GLshort *v);
typedef void (APIENTRYP PFNGLTEXCOORDPOINTERPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
typedef void (APIENTRYP PFNGLTEXENVFPROC) (GLenum target, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLTEXENVFVPROC) (GLenum target, GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLTEXENVIPROC) (GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLTEXENVIVPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLTEXGENDPROC) (GLenum coord, GLenum pname, GLdouble param);
typedef void (APIENTRYP PFNGLTEXGENDVPROC) (GLenum coord, GLenum pname, const GLdouble *params);
typedef void (APIENTRYP PFNGLTEXGENFPROC) (GLenum coord, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLTEXGENFVPROC) (GLenum coord, GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLTEXGENIPROC) (GLenum coord, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLTEXGENIVPROC) (GLenum coord, GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLTEXIMAGE1DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (APIENTRYP PFNGLTEXIMAGE2DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (APIENTRYP PFNGLTEXPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLTEXPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLTEXPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLTEXPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (APIENTRYP PFNGLTRANSLATEDPROC) (GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLTRANSLATEFPROC) (GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLVERTEX2DPROC) (GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLVERTEX2DVPROC) (const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEX2FPROC) (GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLVERTEX2FVPROC) (const GLfloat *v);
typedef void (APIENTRYP PFNGLVERTEX2IPROC) (GLint x, GLint y);
typedef void (APIENTRYP PFNGLVERTEX2IVPROC) (const GLint *v);
typedef void (APIENTRYP PFNGLVERTEX2SPROC) (GLshort x, GLshort y);
typedef void (APIENTRYP PFNGLVERTEX2SVPROC) (const GLshort *v);
typedef void (APIENTRYP PFNGLVERTEX3DPROC) (GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLVERTEX3DVPROC) (const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEX3FPROC) (GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLVERTEX3FVPROC) (const GLfloat *v);
typedef void (APIENTRYP PFNGLVERTEX3IPROC) (GLint x, GLint y, GLint z);
typedef void (APIENTRYP PFNGLVERTEX3IVPROC) (const GLint *v);
typedef void (APIENTRYP PFNGLVERTEX3SPROC) (GLshort x, GLshort y, GLshort z);
typedef void (APIENTRYP PFNGLVERTEX3SVPROC) (const GLshort *v);
typedef void (APIENTRYP PFNGLVERTEX4DPROC) (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLVERTEX4DVPROC) (const GLdouble *v);
typedef void (APIENTRYP PFNGLVERTEX4FPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLVERTEX4FVPROC) (const GLfloat *v);
typedef void (APIENTRYP PFNGLVERTEX4IPROC) (GLint x, GLint y, GLint z, GLint w);
typedef void (APIENTRYP PFNGLVERTEX4IVPROC) (const GLint *v);
typedef void (APIENTRYP PFNGLVERTEX4SPROC) (GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (APIENTRYP PFNGLVERTEX4SVPROC) (const GLshort *v);
typedef void (APIENTRYP PFNGLVERTEXPOINTERPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
typedef void (APIENTRYP PFNGLVIEWPORTPROC) (GLint x, GLint y, GLsizei width, GLsizei height);



class glfn_compat_ver_1_1 {
public:

	PFNGLACCUMPROC fglAccum = nullptr;
	PFNGLALPHAFUNCPROC fglAlphaFunc = nullptr;
	PFNGLARETEXTURESRESIDENTPROC fglAreTexturesResident = nullptr;
	PFNGLARRAYELEMENTPROC fglArrayElement = nullptr;
	PFNGLBEGINPROC fglBegin = nullptr;
	PFNGLBINDTEXTUREPROC fglBindTexture = nullptr;
	PFNGLBITMAPPROC fglBitmap = nullptr;
	PFNGLBLENDFUNCPROC fglBlendFunc = nullptr;
	PFNGLCALLLISTPROC fglCallList = nullptr;
	PFNGLCALLLISTSPROC fglCallLists = nullptr;
	PFNGLCLEARPROC fglClear = nullptr;
	PFNGLCLEARACCUMPROC fglClearAccum = nullptr;
	PFNGLCLEARCOLORPROC fglClearColor = nullptr;
	PFNGLCLEARDEPTHPROC fglClearDepth = nullptr;
	PFNGLCLEARINDEXPROC fglClearIndex = nullptr;
	PFNGLCLEARSTENCILPROC fglClearStencil = nullptr;
	PFNGLCLIPPLANEPROC fglClipPlane = nullptr;
	PFNGLCOLOR3BPROC fglColor3b = nullptr;
	PFNGLCOLOR3BVPROC fglColor3bv = nullptr;
	PFNGLCOLOR3DPROC fglColor3d = nullptr;
	PFNGLCOLOR3DVPROC fglColor3dv = nullptr;
	PFNGLCOLOR3FPROC fglColor3f = nullptr;
	PFNGLCOLOR3FVPROC fglColor3fv = nullptr;
	PFNGLCOLOR3IPROC fglColor3i = nullptr;
	PFNGLCOLOR3IVPROC fglColor3iv = nullptr;
	PFNGLCOLOR3SPROC fglColor3s = nullptr;
	PFNGLCOLOR3SVPROC fglColor3sv = nullptr;
	PFNGLCOLOR3UBPROC fglColor3ub = nullptr;
	PFNGLCOLOR3UBVPROC fglColor3ubv = nullptr;
	PFNGLCOLOR3UIPROC fglColor3ui = nullptr;
	PFNGLCOLOR3UIVPROC fglColor3uiv = nullptr;
	PFNGLCOLOR3USPROC fglColor3us = nullptr;
	PFNGLCOLOR3USVPROC fglColor3usv = nullptr;
	PFNGLCOLOR4BPROC fglColor4b = nullptr;
	PFNGLCOLOR4BVPROC fglColor4bv = nullptr;
	PFNGLCOLOR4DPROC fglColor4d = nullptr;
	PFNGLCOLOR4DVPROC fglColor4dv = nullptr;
	PFNGLCOLOR4FPROC fglColor4f = nullptr;
	PFNGLCOLOR4FVPROC fglColor4fv = nullptr;
	PFNGLCOLOR4IPROC fglColor4i = nullptr;
	PFNGLCOLOR4IVPROC fglColor4iv = nullptr;
	PFNGLCOLOR4SPROC fglColor4s = nullptr;
	PFNGLCOLOR4SVPROC fglColor4sv = nullptr;
	PFNGLCOLOR4UBPROC fglColor4ub = nullptr;
	PFNGLCOLOR4UBVPROC fglColor4ubv = nullptr;
	PFNGLCOLOR4UIPROC fglColor4ui = nullptr;
	PFNGLCOLOR4UIVPROC fglColor4uiv = nullptr;
	PFNGLCOLOR4USPROC fglColor4us = nullptr;
	PFNGLCOLOR4USVPROC fglColor4usv = nullptr;
	PFNGLCOLORMASKPROC fglColorMask = nullptr;
	PFNGLCOLORMATERIALPROC fglColorMaterial = nullptr;
	PFNGLCOLORPOINTERPROC fglColorPointer = nullptr;
	PFNGLCOPYPIXELSPROC fglCopyPixels = nullptr;
	PFNGLCOPYTEXIMAGE1DPROC fglCopyTexImage1D = nullptr;
	PFNGLCOPYTEXIMAGE2DPROC fglCopyTexImage2D = nullptr;
	PFNGLCOPYTEXSUBIMAGE1DPROC fglCopyTexSubImage1D = nullptr;
	PFNGLCOPYTEXSUBIMAGE2DPROC fglCopyTexSubImage2D = nullptr;
	PFNGLCULLFACEPROC fglCullFace = nullptr;
	PFNGLDELETELISTSPROC fglDeleteLists = nullptr;
	PFNGLDELETETEXTURESPROC fglDeleteTextures = nullptr;
	PFNGLDEPTHFUNCPROC fglDepthFunc = nullptr;
	PFNGLDEPTHMASKPROC fglDepthMask = nullptr;
	PFNGLDEPTHRANGEPROC fglDepthRange = nullptr;
	PFNGLDISABLEPROC fglDisable = nullptr;
	PFNGLDISABLECLIENTSTATEPROC fglDisableClientState = nullptr;
	PFNGLDRAWARRAYSPROC fglDrawArrays = nullptr;
	PFNGLDRAWBUFFERPROC fglDrawBuffer = nullptr;
	PFNGLDRAWELEMENTSPROC fglDrawElements = nullptr;
	PFNGLDRAWPIXELSPROC fglDrawPixels = nullptr;
	PFNGLEDGEFLAGPROC fglEdgeFlag = nullptr;
	PFNGLEDGEFLAGPOINTERPROC fglEdgeFlagPointer = nullptr;
	PFNGLEDGEFLAGVPROC fglEdgeFlagv = nullptr;
	PFNGLENABLEPROC fglEnable = nullptr;
	PFNGLENABLECLIENTSTATEPROC fglEnableClientState = nullptr;
	PFNGLENDPROC fglEnd = nullptr;
	PFNGLENDLISTPROC fglEndList = nullptr;
	PFNGLEVALCOORD1DPROC fglEvalCoord1d = nullptr;
	PFNGLEVALCOORD1DVPROC fglEvalCoord1dv = nullptr;
	PFNGLEVALCOORD1FPROC fglEvalCoord1f = nullptr;
	PFNGLEVALCOORD1FVPROC fglEvalCoord1fv = nullptr;
	PFNGLEVALCOORD2DPROC fglEvalCoord2d = nullptr;
	PFNGLEVALCOORD2DVPROC fglEvalCoord2dv = nullptr;
	PFNGLEVALCOORD2FPROC fglEvalCoord2f = nullptr;
	PFNGLEVALCOORD2FVPROC fglEvalCoord2fv = nullptr;
	PFNGLEVALMESH1PROC fglEvalMesh1 = nullptr;
	PFNGLEVALMESH2PROC fglEvalMesh2 = nullptr;
	PFNGLEVALPOINT1PROC fglEvalPoint1 = nullptr;
	PFNGLEVALPOINT2PROC fglEvalPoint2 = nullptr;
	PFNGLFEEDBACKBUFFERPROC fglFeedbackBuffer = nullptr;
	PFNGLFINISHPROC fglFinish = nullptr;
	PFNGLFLUSHPROC fglFlush = nullptr;
	PFNGLFOGFPROC fglFogf = nullptr;
	PFNGLFOGFVPROC fglFogfv = nullptr;
	PFNGLFOGIPROC fglFogi = nullptr;
	PFNGLFOGIVPROC fglFogiv = nullptr;
	PFNGLFRONTFACEPROC fglFrontFace = nullptr;
	PFNGLFRUSTUMPROC fglFrustum = nullptr;
	PFNGLGENLISTSPROC fglGenLists = nullptr;
	PFNGLGENTEXTURESPROC fglGenTextures = nullptr;
	PFNGLGETBOOLEANVPROC fglGetBooleanv = nullptr;
	PFNGLGETCLIPPLANEPROC fglGetClipPlane = nullptr;
	PFNGLGETDOUBLEVPROC fglGetDoublev = nullptr;
	PFNGLGETERRORPROC fglGetError = nullptr;
	PFNGLGETFLOATVPROC fglGetFloatv = nullptr;
	PFNGLGETINTEGERVPROC fglGetIntegerv = nullptr;
	PFNGLGETLIGHTFVPROC fglGetLightfv = nullptr;
	PFNGLGETLIGHTIVPROC fglGetLightiv = nullptr;
	PFNGLGETMAPDVPROC fglGetMapdv = nullptr;
	PFNGLGETMAPFVPROC fglGetMapfv = nullptr;
	PFNGLGETMAPIVPROC fglGetMapiv = nullptr;
	PFNGLGETMATERIALFVPROC fglGetMaterialfv = nullptr;
	PFNGLGETMATERIALIVPROC fglGetMaterialiv = nullptr;
	PFNGLGETPIXELMAPFVPROC fglGetPixelMapfv = nullptr;
	PFNGLGETPIXELMAPUIVPROC fglGetPixelMapuiv = nullptr;
	PFNGLGETPIXELMAPUSVPROC fglGetPixelMapusv = nullptr;
	PFNGLGETPOINTERVPROC fglGetPointerv = nullptr;
	PFNGLGETPOLYGONSTIPPLEPROC fglGetPolygonStipple = nullptr;
	PFNGLGETSTRINGPROC fglGetString = nullptr;
	PFNGLGETTEXENVFVPROC fglGetTexEnvfv = nullptr;
	PFNGLGETTEXENVIVPROC fglGetTexEnviv = nullptr;
	PFNGLGETTEXGENDVPROC fglGetTexGendv = nullptr;
	PFNGLGETTEXGENFVPROC fglGetTexGenfv = nullptr;
	PFNGLGETTEXGENIVPROC fglGetTexGeniv = nullptr;
	PFNGLGETTEXIMAGEPROC fglGetTexImage = nullptr;
	PFNGLGETTEXLEVELPARAMETERFVPROC fglGetTexLevelParameterfv = nullptr;
	PFNGLGETTEXLEVELPARAMETERIVPROC fglGetTexLevelParameteriv = nullptr;
	PFNGLGETTEXPARAMETERFVPROC fglGetTexParameterfv = nullptr;
	PFNGLGETTEXPARAMETERIVPROC fglGetTexParameteriv = nullptr;
	PFNGLHINTPROC fglHint = nullptr;
	PFNGLINDEXMASKPROC fglIndexMask = nullptr;
	PFNGLINDEXPOINTERPROC fglIndexPointer = nullptr;
	PFNGLINDEXDPROC fglIndexd = nullptr;
	PFNGLINDEXDVPROC fglIndexdv = nullptr;
	PFNGLINDEXFPROC fglIndexf = nullptr;
	PFNGLINDEXFVPROC fglIndexfv = nullptr;
	PFNGLINDEXIPROC fglIndexi = nullptr;
	PFNGLINDEXIVPROC fglIndexiv = nullptr;
	PFNGLINDEXSPROC fglIndexs = nullptr;
	PFNGLINDEXSVPROC fglIndexsv = nullptr;
	PFNGLINDEXUBPROC fglIndexub = nullptr;
	PFNGLINDEXUBVPROC fglIndexubv = nullptr;
	PFNGLINITNAMESPROC fglInitNames = nullptr;
	PFNGLINTERLEAVEDARRAYSPROC fglInterleavedArrays = nullptr;
	PFNGLISENABLEDPROC fglIsEnabled = nullptr;
	PFNGLISLISTPROC fglIsList = nullptr;
	PFNGLISTEXTUREPROC fglIsTexture = nullptr;
	PFNGLLIGHTMODELFPROC fglLightModelf = nullptr;
	PFNGLLIGHTMODELFVPROC fglLightModelfv = nullptr;
	PFNGLLIGHTMODELIPROC fglLightModeli = nullptr;
	PFNGLLIGHTMODELIVPROC fglLightModeliv = nullptr;
	PFNGLLIGHTFPROC fglLightf = nullptr;
	PFNGLLIGHTFVPROC fglLightfv = nullptr;
	PFNGLLIGHTIPROC fglLighti = nullptr;
	PFNGLLIGHTIVPROC fglLightiv = nullptr;
	PFNGLLINESTIPPLEPROC fglLineStipple = nullptr;
	PFNGLLINEWIDTHPROC fglLineWidth = nullptr;
	PFNGLLISTBASEPROC fglListBase = nullptr;
	PFNGLLOADIDENTITYPROC fglLoadIdentity = nullptr;
	PFNGLLOADMATRIXDPROC fglLoadMatrixd = nullptr;
	PFNGLLOADMATRIXFPROC fglLoadMatrixf = nullptr;
	PFNGLLOADNAMEPROC fglLoadName = nullptr;
	PFNGLLOGICOPPROC fglLogicOp = nullptr;
	PFNGLMAP1DPROC fglMap1d = nullptr;
	PFNGLMAP1FPROC fglMap1f = nullptr;
	PFNGLMAP2DPROC fglMap2d = nullptr;
	PFNGLMAP2FPROC fglMap2f = nullptr;
	PFNGLMAPGRID1DPROC fglMapGrid1d = nullptr;
	PFNGLMAPGRID1FPROC fglMapGrid1f = nullptr;
	PFNGLMAPGRID2DPROC fglMapGrid2d = nullptr;
	PFNGLMAPGRID2FPROC fglMapGrid2f = nullptr;
	PFNGLMATERIALFPROC fglMaterialf = nullptr;
	PFNGLMATERIALFVPROC fglMaterialfv = nullptr;
	PFNGLMATERIALIPROC fglMateriali = nullptr;
	PFNGLMATERIALIVPROC fglMaterialiv = nullptr;
	PFNGLMATRIXMODEPROC fglMatrixMode = nullptr;
	PFNGLMULTMATRIXDPROC fglMultMatrixd = nullptr;
	PFNGLMULTMATRIXFPROC fglMultMatrixf = nullptr;
	PFNGLNEWLISTPROC fglNewList = nullptr;
	PFNGLNORMAL3BPROC fglNormal3b = nullptr;
	PFNGLNORMAL3BVPROC fglNormal3bv = nullptr;
	PFNGLNORMAL3DPROC fglNormal3d = nullptr;
	PFNGLNORMAL3DVPROC fglNormal3dv = nullptr;
	PFNGLNORMAL3FPROC fglNormal3f = nullptr;
	PFNGLNORMAL3FVPROC fglNormal3fv = nullptr;
	PFNGLNORMAL3IPROC fglNormal3i = nullptr;
	PFNGLNORMAL3IVPROC fglNormal3iv = nullptr;
	PFNGLNORMAL3SPROC fglNormal3s = nullptr;
	PFNGLNORMAL3SVPROC fglNormal3sv = nullptr;
	PFNGLNORMALPOINTERPROC fglNormalPointer = nullptr;
	PFNGLORTHOPROC fglOrtho = nullptr;
	PFNGLPASSTHROUGHPROC fglPassThrough = nullptr;
	PFNGLPIXELMAPFVPROC fglPixelMapfv = nullptr;
	PFNGLPIXELMAPUIVPROC fglPixelMapuiv = nullptr;
	PFNGLPIXELMAPUSVPROC fglPixelMapusv = nullptr;
	PFNGLPIXELSTOREFPROC fglPixelStoref = nullptr;
	PFNGLPIXELSTOREIPROC fglPixelStorei = nullptr;
	PFNGLPIXELTRANSFERFPROC fglPixelTransferf = nullptr;
	PFNGLPIXELTRANSFERIPROC fglPixelTransferi = nullptr;
	PFNGLPIXELZOOMPROC fglPixelZoom = nullptr;
	PFNGLPOINTSIZEPROC fglPointSize = nullptr;
	PFNGLPOLYGONMODEPROC fglPolygonMode = nullptr;
	PFNGLPOLYGONOFFSETPROC fglPolygonOffset = nullptr;
	PFNGLPOLYGONSTIPPLEPROC fglPolygonStipple = nullptr;
	PFNGLPOPATTRIBPROC fglPopAttrib = nullptr;
	PFNGLPOPCLIENTATTRIBPROC fglPopClientAttrib = nullptr;
	PFNGLPOPMATRIXPROC fglPopMatrix = nullptr;
	PFNGLPOPNAMEPROC fglPopName = nullptr;
	PFNGLPRIORITIZETEXTURESPROC fglPrioritizeTextures = nullptr;
	PFNGLPUSHATTRIBPROC fglPushAttrib = nullptr;
	PFNGLPUSHCLIENTATTRIBPROC fglPushClientAttrib = nullptr;
	PFNGLPUSHMATRIXPROC fglPushMatrix = nullptr;
	PFNGLPUSHNAMEPROC fglPushName = nullptr;
	PFNGLRASTERPOS2DPROC fglRasterPos2d = nullptr;
	PFNGLRASTERPOS2DVPROC fglRasterPos2dv = nullptr;
	PFNGLRASTERPOS2FPROC fglRasterPos2f = nullptr;
	PFNGLRASTERPOS2FVPROC fglRasterPos2fv = nullptr;
	PFNGLRASTERPOS2IPROC fglRasterPos2i = nullptr;
	PFNGLRASTERPOS2IVPROC fglRasterPos2iv = nullptr;
	PFNGLRASTERPOS2SPROC fglRasterPos2s = nullptr;
	PFNGLRASTERPOS2SVPROC fglRasterPos2sv = nullptr;
	PFNGLRASTERPOS3DPROC fglRasterPos3d = nullptr;
	PFNGLRASTERPOS3DVPROC fglRasterPos3dv = nullptr;
	PFNGLRASTERPOS3FPROC fglRasterPos3f = nullptr;
	PFNGLRASTERPOS3FVPROC fglRasterPos3fv = nullptr;
	PFNGLRASTERPOS3IPROC fglRasterPos3i = nullptr;
	PFNGLRASTERPOS3IVPROC fglRasterPos3iv = nullptr;
	PFNGLRASTERPOS3SPROC fglRasterPos3s = nullptr;
	PFNGLRASTERPOS3SVPROC fglRasterPos3sv = nullptr;
	PFNGLRASTERPOS4DPROC fglRasterPos4d = nullptr;
	PFNGLRASTERPOS4DVPROC fglRasterPos4dv = nullptr;
	PFNGLRASTERPOS4FPROC fglRasterPos4f = nullptr;
	PFNGLRASTERPOS4FVPROC fglRasterPos4fv = nullptr;
	PFNGLRASTERPOS4IPROC fglRasterPos4i = nullptr;
	PFNGLRASTERPOS4IVPROC fglRasterPos4iv = nullptr;
	PFNGLRASTERPOS4SPROC fglRasterPos4s = nullptr;
	PFNGLRASTERPOS4SVPROC fglRasterPos4sv = nullptr;
	PFNGLREADBUFFERPROC fglReadBuffer = nullptr;
	PFNGLREADPIXELSPROC fglReadPixels = nullptr;
	PFNGLRECTDPROC fglRectd = nullptr;
	PFNGLRECTDVPROC fglRectdv = nullptr;
	PFNGLRECTFPROC fglRectf = nullptr;
	PFNGLRECTFVPROC fglRectfv = nullptr;
	PFNGLRECTIPROC fglRecti = nullptr;
	PFNGLRECTIVPROC fglRectiv = nullptr;
	PFNGLRECTSPROC fglRects = nullptr;
	PFNGLRECTSVPROC fglRectsv = nullptr;
	PFNGLRENDERMODEPROC fglRenderMode = nullptr;
	PFNGLROTATEDPROC fglRotated = nullptr;
	PFNGLROTATEFPROC fglRotatef = nullptr;
	PFNGLSCALEDPROC fglScaled = nullptr;
	PFNGLSCALEFPROC fglScalef = nullptr;
	PFNGLSCISSORPROC fglScissor = nullptr;
	PFNGLSELECTBUFFERPROC fglSelectBuffer = nullptr;
	PFNGLSHADEMODELPROC fglShadeModel = nullptr;
	PFNGLSTENCILFUNCPROC fglStencilFunc = nullptr;
	PFNGLSTENCILMASKPROC fglStencilMask = nullptr;
	PFNGLSTENCILOPPROC fglStencilOp = nullptr;
	PFNGLTEXCOORD1DPROC fglTexCoord1d = nullptr;
	PFNGLTEXCOORD1DVPROC fglTexCoord1dv = nullptr;
	PFNGLTEXCOORD1FPROC fglTexCoord1f = nullptr;
	PFNGLTEXCOORD1FVPROC fglTexCoord1fv = nullptr;
	PFNGLTEXCOORD1IPROC fglTexCoord1i = nullptr;
	PFNGLTEXCOORD1IVPROC fglTexCoord1iv = nullptr;
	PFNGLTEXCOORD1SPROC fglTexCoord1s = nullptr;
	PFNGLTEXCOORD1SVPROC fglTexCoord1sv = nullptr;
	PFNGLTEXCOORD2DPROC fglTexCoord2d = nullptr;
	PFNGLTEXCOORD2DVPROC fglTexCoord2dv = nullptr;
	PFNGLTEXCOORD2FPROC fglTexCoord2f = nullptr;
	PFNGLTEXCOORD2FVPROC fglTexCoord2fv = nullptr;
	PFNGLTEXCOORD2IPROC fglTexCoord2i = nullptr;
	PFNGLTEXCOORD2IVPROC fglTexCoord2iv = nullptr;
	PFNGLTEXCOORD2SPROC fglTexCoord2s = nullptr;
	PFNGLTEXCOORD2SVPROC fglTexCoord2sv = nullptr;
	PFNGLTEXCOORD3DPROC fglTexCoord3d = nullptr;
	PFNGLTEXCOORD3DVPROC fglTexCoord3dv = nullptr;
	PFNGLTEXCOORD3FPROC fglTexCoord3f = nullptr;
	PFNGLTEXCOORD3FVPROC fglTexCoord3fv = nullptr;
	PFNGLTEXCOORD3IPROC fglTexCoord3i = nullptr;
	PFNGLTEXCOORD3IVPROC fglTexCoord3iv = nullptr;
	PFNGLTEXCOORD3SPROC fglTexCoord3s = nullptr;
	PFNGLTEXCOORD3SVPROC fglTexCoord3sv = nullptr;
	PFNGLTEXCOORD4DPROC fglTexCoord4d = nullptr;
	PFNGLTEXCOORD4DVPROC fglTexCoord4dv = nullptr;
	PFNGLTEXCOORD4FPROC fglTexCoord4f = nullptr;
	PFNGLTEXCOORD4FVPROC fglTexCoord4fv = nullptr;
	PFNGLTEXCOORD4IPROC fglTexCoord4i = nullptr;
	PFNGLTEXCOORD4IVPROC fglTexCoord4iv = nullptr;
	PFNGLTEXCOORD4SPROC fglTexCoord4s = nullptr;
	PFNGLTEXCOORD4SVPROC fglTexCoord4sv = nullptr;
	PFNGLTEXCOORDPOINTERPROC fglTexCoordPointer = nullptr;
	PFNGLTEXENVFPROC fglTexEnvf = nullptr;
	PFNGLTEXENVFVPROC fglTexEnvfv = nullptr;
	PFNGLTEXENVIPROC fglTexEnvi = nullptr;
	PFNGLTEXENVIVPROC fglTexEnviv = nullptr;
	PFNGLTEXGENDPROC fglTexGend = nullptr;
	PFNGLTEXGENDVPROC fglTexGendv = nullptr;
	PFNGLTEXGENFPROC fglTexGenf = nullptr;
	PFNGLTEXGENFVPROC fglTexGenfv = nullptr;
	PFNGLTEXGENIPROC fglTexGeni = nullptr;
	PFNGLTEXGENIVPROC fglTexGeniv = nullptr;
	PFNGLTEXIMAGE1DPROC fglTexImage1D = nullptr;
	PFNGLTEXIMAGE2DPROC fglTexImage2D = nullptr;
	PFNGLTEXPARAMETERFPROC fglTexParameterf = nullptr;
	PFNGLTEXPARAMETERFVPROC fglTexParameterfv = nullptr;
	PFNGLTEXPARAMETERIPROC fglTexParameteri = nullptr;
	PFNGLTEXPARAMETERIVPROC fglTexParameteriv = nullptr;
	PFNGLTEXSUBIMAGE1DPROC fglTexSubImage1D = nullptr;
	PFNGLTEXSUBIMAGE2DPROC fglTexSubImage2D = nullptr;
	PFNGLTRANSLATEDPROC fglTranslated = nullptr;
	PFNGLTRANSLATEFPROC fglTranslatef = nullptr;
	PFNGLVERTEX2DPROC fglVertex2d = nullptr;
	PFNGLVERTEX2DVPROC fglVertex2dv = nullptr;
	PFNGLVERTEX2FPROC fglVertex2f = nullptr;
	PFNGLVERTEX2FVPROC fglVertex2fv = nullptr;
	PFNGLVERTEX2IPROC fglVertex2i = nullptr;
	PFNGLVERTEX2IVPROC fglVertex2iv = nullptr;
	PFNGLVERTEX2SPROC fglVertex2s = nullptr;
	PFNGLVERTEX2SVPROC fglVertex2sv = nullptr;
	PFNGLVERTEX3DPROC fglVertex3d = nullptr;
	PFNGLVERTEX3DVPROC fglVertex3dv = nullptr;
	PFNGLVERTEX3FPROC fglVertex3f = nullptr;
	PFNGLVERTEX3FVPROC fglVertex3fv = nullptr;
	PFNGLVERTEX3IPROC fglVertex3i = nullptr;
	PFNGLVERTEX3IVPROC fglVertex3iv = nullptr;
	PFNGLVERTEX3SPROC fglVertex3s = nullptr;
	PFNGLVERTEX3SVPROC fglVertex3sv = nullptr;
	PFNGLVERTEX4DPROC fglVertex4d = nullptr;
	PFNGLVERTEX4DVPROC fglVertex4dv = nullptr;
	PFNGLVERTEX4FPROC fglVertex4f = nullptr;
	PFNGLVERTEX4FVPROC fglVertex4fv = nullptr;
	PFNGLVERTEX4IPROC fglVertex4i = nullptr;
	PFNGLVERTEX4IVPROC fglVertex4iv = nullptr;
	PFNGLVERTEX4SPROC fglVertex4s = nullptr;
	PFNGLVERTEX4SVPROC fglVertex4sv = nullptr;
	PFNGLVERTEXPOINTERPROC fglVertexPointer = nullptr;
	PFNGLVIEWPORTPROC fglViewport = nullptr;

	void init(PFN_loadfunc load);

};




class glfn_compat_ver_1_2: public glfn_compat_ver_1_1 {
public:

	PFNGLDRAWRANGEELEMENTSPROC fglDrawRangeElements = nullptr;
	PFNGLTEXIMAGE3DPROC fglTexImage3D = nullptr;
	PFNGLTEXSUBIMAGE3DPROC fglTexSubImage3D = nullptr;
	PFNGLCOPYTEXSUBIMAGE3DPROC fglCopyTexSubImage3D = nullptr;

	void init(PFN_loadfunc load);
};



class glfn_compat_ver_1_3 : public glfn_compat_ver_1_2 {
public:

	PFNGLACTIVETEXTUREPROC fglActiveTexture = nullptr;
	PFNGLSAMPLECOVERAGEPROC fglSampleCoverage = nullptr;
	PFNGLCOMPRESSEDTEXIMAGE3DPROC fglCompressedTexImage3D = nullptr;
	PFNGLCOMPRESSEDTEXIMAGE2DPROC fglCompressedTexImage2D = nullptr;
	PFNGLCOMPRESSEDTEXIMAGE1DPROC fglCompressedTexImage1D = nullptr;
	PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC fglCompressedTexSubImage3D = nullptr;
	PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC fglCompressedTexSubImage2D = nullptr;
	PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC fglCompressedTexSubImage1D = nullptr;
	PFNGLGETCOMPRESSEDTEXIMAGEPROC fglGetCompressedTexImage = nullptr;
	PFNGLCLIENTACTIVETEXTUREPROC fglClientActiveTexture = nullptr;
	PFNGLMULTITEXCOORD1DPROC fglMultiTexCoord1d = nullptr;
	PFNGLMULTITEXCOORD1DVPROC fglMultiTexCoord1dv = nullptr;
	PFNGLMULTITEXCOORD1FPROC fglMultiTexCoord1f = nullptr;
	PFNGLMULTITEXCOORD1FVPROC fglMultiTexCoord1fv = nullptr;
	PFNGLMULTITEXCOORD1IPROC fglMultiTexCoord1i = nullptr;
	PFNGLMULTITEXCOORD1IVPROC fglMultiTexCoord1iv = nullptr;
	PFNGLMULTITEXCOORD1SPROC fglMultiTexCoord1s = nullptr;
	PFNGLMULTITEXCOORD1SVPROC fglMultiTexCoord1sv = nullptr;
	PFNGLMULTITEXCOORD2DPROC fglMultiTexCoord2d = nullptr;
	PFNGLMULTITEXCOORD2DVPROC fglMultiTexCoord2dv = nullptr;
	PFNGLMULTITEXCOORD2FPROC fglMultiTexCoord2f = nullptr;
	PFNGLMULTITEXCOORD2FVPROC fglMultiTexCoord2fv = nullptr;
	PFNGLMULTITEXCOORD2IPROC fglMultiTexCoord2i = nullptr;
	PFNGLMULTITEXCOORD2IVPROC fglMultiTexCoord2iv = nullptr;
	PFNGLMULTITEXCOORD2SPROC fglMultiTexCoord2s = nullptr;
	PFNGLMULTITEXCOORD2SVPROC fglMultiTexCoord2sv = nullptr;
	PFNGLMULTITEXCOORD3DPROC fglMultiTexCoord3d = nullptr;
	PFNGLMULTITEXCOORD3DVPROC fglMultiTexCoord3dv = nullptr;
	PFNGLMULTITEXCOORD3FPROC fglMultiTexCoord3f = nullptr;
	PFNGLMULTITEXCOORD3FVPROC fglMultiTexCoord3fv = nullptr;
	PFNGLMULTITEXCOORD3IPROC fglMultiTexCoord3i = nullptr;
	PFNGLMULTITEXCOORD3IVPROC fglMultiTexCoord3iv = nullptr;
	PFNGLMULTITEXCOORD3SPROC fglMultiTexCoord3s = nullptr;
	PFNGLMULTITEXCOORD3SVPROC fglMultiTexCoord3sv = nullptr;
	PFNGLMULTITEXCOORD4DPROC fglMultiTexCoord4d = nullptr;
	PFNGLMULTITEXCOORD4DVPROC fglMultiTexCoord4dv = nullptr;
	PFNGLMULTITEXCOORD4FPROC fglMultiTexCoord4f = nullptr;
	PFNGLMULTITEXCOORD4FVPROC fglMultiTexCoord4fv = nullptr;
	PFNGLMULTITEXCOORD4IPROC fglMultiTexCoord4i = nullptr;
	PFNGLMULTITEXCOORD4IVPROC fglMultiTexCoord4iv = nullptr;
	PFNGLMULTITEXCOORD4SPROC fglMultiTexCoord4s = nullptr;
	PFNGLMULTITEXCOORD4SVPROC fglMultiTexCoord4sv = nullptr;
	PFNGLLOADTRANSPOSEMATRIXFPROC fglLoadTransposeMatrixf = nullptr;
	PFNGLLOADTRANSPOSEMATRIXDPROC fglLoadTransposeMatrixd = nullptr;
	PFNGLMULTTRANSPOSEMATRIXFPROC fglMultTransposeMatrixf = nullptr;
	PFNGLMULTTRANSPOSEMATRIXDPROC fglMultTransposeMatrixd = nullptr;

	void init(PFN_loadfunc load);
};



class glfn_compat_ver_1_4 : public glfn_compat_ver_1_3 {
public:

	PFNGLBLENDFUNCSEPARATEPROC fglBlendFuncSeparate = nullptr;
	PFNGLMULTIDRAWARRAYSPROC fglMultiDrawArrays = nullptr;
	PFNGLMULTIDRAWELEMENTSPROC fglMultiDrawElements = nullptr;
	PFNGLPOINTPARAMETERFPROC fglPointParameterf = nullptr;
	PFNGLPOINTPARAMETERFVPROC fglPointParameterfv = nullptr;
	PFNGLPOINTPARAMETERIPROC fglPointParameteri = nullptr;
	PFNGLPOINTPARAMETERIVPROC fglPointParameteriv = nullptr;
	PFNGLFOGCOORDFPROC fglFogCoordf = nullptr;
	PFNGLFOGCOORDFVPROC fglFogCoordfv = nullptr;
	PFNGLFOGCOORDDPROC fglFogCoordd = nullptr;
	PFNGLFOGCOORDDVPROC fglFogCoorddv = nullptr;
	PFNGLFOGCOORDPOINTERPROC fglFogCoordPointer = nullptr;
	PFNGLSECONDARYCOLOR3BPROC fglSecondaryColor3b = nullptr;
	PFNGLSECONDARYCOLOR3BVPROC fglSecondaryColor3bv = nullptr;
	PFNGLSECONDARYCOLOR3DPROC fglSecondaryColor3d = nullptr;
	PFNGLSECONDARYCOLOR3DVPROC fglSecondaryColor3dv = nullptr;
	PFNGLSECONDARYCOLOR3FPROC fglSecondaryColor3f = nullptr;
	PFNGLSECONDARYCOLOR3FVPROC fglSecondaryColor3fv = nullptr;
	PFNGLSECONDARYCOLOR3IPROC fglSecondaryColor3i = nullptr;
	PFNGLSECONDARYCOLOR3IVPROC fglSecondaryColor3iv = nullptr;
	PFNGLSECONDARYCOLOR3SPROC fglSecondaryColor3s = nullptr;
	PFNGLSECONDARYCOLOR3SVPROC fglSecondaryColor3sv = nullptr;
	PFNGLSECONDARYCOLOR3UBPROC fglSecondaryColor3ub = nullptr;
	PFNGLSECONDARYCOLOR3UBVPROC fglSecondaryColor3ubv = nullptr;
	PFNGLSECONDARYCOLOR3UIPROC fglSecondaryColor3ui = nullptr;
	PFNGLSECONDARYCOLOR3UIVPROC fglSecondaryColor3uiv = nullptr;
	PFNGLSECONDARYCOLOR3USPROC fglSecondaryColor3us = nullptr;
	PFNGLSECONDARYCOLOR3USVPROC fglSecondaryColor3usv = nullptr;
	PFNGLSECONDARYCOLORPOINTERPROC fglSecondaryColorPointer = nullptr;
	PFNGLWINDOWPOS2DPROC fglWindowPos2d = nullptr;
	PFNGLWINDOWPOS2DVPROC fglWindowPos2dv = nullptr;
	PFNGLWINDOWPOS2FPROC fglWindowPos2f = nullptr;
	PFNGLWINDOWPOS2FVPROC fglWindowPos2fv = nullptr;
	PFNGLWINDOWPOS2IPROC fglWindowPos2i = nullptr;
	PFNGLWINDOWPOS2IVPROC fglWindowPos2iv = nullptr;
	PFNGLWINDOWPOS2SPROC fglWindowPos2s = nullptr;
	PFNGLWINDOWPOS2SVPROC fglWindowPos2sv = nullptr;
	PFNGLWINDOWPOS3DPROC fglWindowPos3d = nullptr;
	PFNGLWINDOWPOS3DVPROC fglWindowPos3dv = nullptr;
	PFNGLWINDOWPOS3FPROC fglWindowPos3f = nullptr;
	PFNGLWINDOWPOS3FVPROC fglWindowPos3fv = nullptr;
	PFNGLWINDOWPOS3IPROC fglWindowPos3i = nullptr;
	PFNGLWINDOWPOS3IVPROC fglWindowPos3iv = nullptr;
	PFNGLWINDOWPOS3SPROC fglWindowPos3s = nullptr;
	PFNGLWINDOWPOS3SVPROC fglWindowPos3sv = nullptr;
	PFNGLBLENDCOLORPROC fglBlendColor = nullptr;
	PFNGLBLENDEQUATIONPROC fglBlendEquation = nullptr;

	void init(PFN_loadfunc load);
};



class glfn_compat_ver_1_5 : public glfn_compat_ver_1_4 {
public:

	PFNGLGENQUERIESPROC fglGenQueries = nullptr;
	PFNGLDELETEQUERIESPROC fglDeleteQueries = nullptr;
	PFNGLISQUERYPROC fglIsQuery = nullptr;
	PFNGLBEGINQUERYPROC fglBeginQuery = nullptr;
	PFNGLENDQUERYPROC fglEndQuery = nullptr;
	PFNGLGETQUERYIVPROC fglGetQueryiv = nullptr;
	PFNGLGETQUERYOBJECTIVPROC fglGetQueryObjectiv = nullptr;
	PFNGLGETQUERYOBJECTUIVPROC fglGetQueryObjectuiv = nullptr;
	PFNGLBINDBUFFERPROC fglBindBuffer = nullptr;
	PFNGLDELETEBUFFERSPROC fglDeleteBuffers = nullptr;
	PFNGLGENBUFFERSPROC fglGenBuffers = nullptr;
	PFNGLISBUFFERPROC fglIsBuffer = nullptr;
	PFNGLBUFFERDATAPROC fglBufferData = nullptr;
	PFNGLBUFFERSUBDATAPROC fglBufferSubData = nullptr;
	PFNGLGETBUFFERSUBDATAPROC fglGetBufferSubData = nullptr;
	PFNGLMAPBUFFERPROC fglMapBuffer = nullptr;
	PFNGLUNMAPBUFFERPROC fglUnmapBuffer = nullptr;
	PFNGLGETBUFFERPARAMETERIVPROC fglGetBufferParameteriv = nullptr;
	PFNGLGETBUFFERPOINTERVPROC fglGetBufferPointerv = nullptr;

	void init(PFN_loadfunc load);
};



class glfn_compat_ver_2_0 : public glfn_compat_ver_1_5 {
public:

	PFNGLBLENDEQUATIONSEPARATEPROC fglBlendEquationSeparate = nullptr;
	PFNGLDRAWBUFFERSPROC fglDrawBuffers = nullptr;
	PFNGLSTENCILOPSEPARATEPROC fglStencilOpSeparate = nullptr;
	PFNGLSTENCILFUNCSEPARATEPROC fglStencilFuncSeparate = nullptr;
	PFNGLSTENCILMASKSEPARATEPROC fglStencilMaskSeparate = nullptr;
	PFNGLATTACHSHADERPROC fglAttachShader = nullptr;
	PFNGLBINDATTRIBLOCATIONPROC fglBindAttribLocation = nullptr;
	PFNGLCOMPILESHADERPROC fglCompileShader = nullptr;
	PFNGLCREATEPROGRAMPROC fglCreateProgram = nullptr;
	PFNGLCREATESHADERPROC fglCreateShader = nullptr;
	PFNGLDELETEPROGRAMPROC fglDeleteProgram = nullptr;
	PFNGLDELETESHADERPROC fglDeleteShader = nullptr;
	PFNGLDETACHSHADERPROC fglDetachShader = nullptr;
	PFNGLDISABLEVERTEXATTRIBARRAYPROC fglDisableVertexAttribArray = nullptr;
	PFNGLENABLEVERTEXATTRIBARRAYPROC fglEnableVertexAttribArray = nullptr;
	PFNGLGETACTIVEATTRIBPROC fglGetActiveAttrib = nullptr;
	PFNGLGETACTIVEUNIFORMPROC fglGetActiveUniform = nullptr;
	PFNGLGETATTACHEDSHADERSPROC fglGetAttachedShaders = nullptr;
	PFNGLGETATTRIBLOCATIONPROC fglGetAttribLocation = nullptr;
	PFNGLGETPROGRAMIVPROC fglGetProgramiv = nullptr;
	PFNGLGETPROGRAMINFOLOGPROC fglGetProgramInfoLog = nullptr;
	PFNGLGETSHADERIVPROC fglGetShaderiv = nullptr;
	PFNGLGETSHADERINFOLOGPROC fglGetShaderInfoLog = nullptr;
	PFNGLGETSHADERSOURCEPROC fglGetShaderSource = nullptr;
	PFNGLGETUNIFORMLOCATIONPROC fglGetUniformLocation = nullptr;
	PFNGLGETUNIFORMFVPROC fglGetUniformfv = nullptr;
	PFNGLGETUNIFORMIVPROC fglGetUniformiv = nullptr;
	PFNGLGETVERTEXATTRIBDVPROC fglGetVertexAttribdv = nullptr;
	PFNGLGETVERTEXATTRIBFVPROC fglGetVertexAttribfv = nullptr;
	PFNGLGETVERTEXATTRIBIVPROC fglGetVertexAttribiv = nullptr;
	PFNGLGETVERTEXATTRIBPOINTERVPROC fglGetVertexAttribPointerv = nullptr;
	PFNGLISPROGRAMPROC fglIsProgram = nullptr;
	PFNGLISSHADERPROC fglIsShader = nullptr;
	PFNGLLINKPROGRAMPROC fglLinkProgram = nullptr;
	PFNGLSHADERSOURCEPROC fglShaderSource = nullptr;
	PFNGLUSEPROGRAMPROC fglUseProgram = nullptr;
	PFNGLUNIFORM1FPROC fglUniform1f = nullptr;
	PFNGLUNIFORM2FPROC fglUniform2f = nullptr;
	PFNGLUNIFORM3FPROC fglUniform3f = nullptr;
	PFNGLUNIFORM4FPROC fglUniform4f = nullptr;
	PFNGLUNIFORM1IPROC fglUniform1i = nullptr;
	PFNGLUNIFORM2IPROC fglUniform2i = nullptr;
	PFNGLUNIFORM3IPROC fglUniform3i = nullptr;
	PFNGLUNIFORM4IPROC fglUniform4i = nullptr;
	PFNGLUNIFORM1FVPROC fglUniform1fv = nullptr;
	PFNGLUNIFORM2FVPROC fglUniform2fv = nullptr;
	PFNGLUNIFORM3FVPROC fglUniform3fv = nullptr;
	PFNGLUNIFORM4FVPROC fglUniform4fv = nullptr;
	PFNGLUNIFORM1IVPROC fglUniform1iv = nullptr;
	PFNGLUNIFORM2IVPROC fglUniform2iv = nullptr;
	PFNGLUNIFORM3IVPROC fglUniform3iv = nullptr;
	PFNGLUNIFORM4IVPROC fglUniform4iv = nullptr;
	PFNGLUNIFORMMATRIX2FVPROC fglUniformMatrix2fv = nullptr;
	PFNGLUNIFORMMATRIX3FVPROC fglUniformMatrix3fv = nullptr;
	PFNGLUNIFORMMATRIX4FVPROC fglUniformMatrix4fv = nullptr;
	PFNGLVALIDATEPROGRAMPROC fglValidateProgram = nullptr;
	PFNGLVERTEXATTRIB1DPROC fglVertexAttrib1d = nullptr;
	PFNGLVERTEXATTRIB1DVPROC fglVertexAttrib1dv = nullptr;
	PFNGLVERTEXATTRIB1FPROC fglVertexAttrib1f = nullptr;
	PFNGLVERTEXATTRIB1FVPROC fglVertexAttrib1fv = nullptr;
	PFNGLVERTEXATTRIB1SPROC fglVertexAttrib1s = nullptr;
	PFNGLVERTEXATTRIB1SVPROC fglVertexAttrib1sv = nullptr;
	PFNGLVERTEXATTRIB2DPROC fglVertexAttrib2d = nullptr;
	PFNGLVERTEXATTRIB2DVPROC fglVertexAttrib2dv = nullptr;
	PFNGLVERTEXATTRIB2FPROC fglVertexAttrib2f = nullptr;
	PFNGLVERTEXATTRIB2FVPROC fglVertexAttrib2fv = nullptr;
	PFNGLVERTEXATTRIB2SPROC fglVertexAttrib2s = nullptr;
	PFNGLVERTEXATTRIB2SVPROC fglVertexAttrib2sv = nullptr;
	PFNGLVERTEXATTRIB3DPROC fglVertexAttrib3d = nullptr;
	PFNGLVERTEXATTRIB3DVPROC fglVertexAttrib3dv = nullptr;
	PFNGLVERTEXATTRIB3FPROC fglVertexAttrib3f = nullptr;
	PFNGLVERTEXATTRIB3FVPROC fglVertexAttrib3fv = nullptr;
	PFNGLVERTEXATTRIB3SPROC fglVertexAttrib3s = nullptr;
	PFNGLVERTEXATTRIB3SVPROC fglVertexAttrib3sv = nullptr;
	PFNGLVERTEXATTRIB4NBVPROC fglVertexAttrib4Nbv = nullptr;
	PFNGLVERTEXATTRIB4NIVPROC fglVertexAttrib4Niv = nullptr;
	PFNGLVERTEXATTRIB4NSVPROC fglVertexAttrib4Nsv = nullptr;
	PFNGLVERTEXATTRIB4NUBPROC fglVertexAttrib4Nub = nullptr;
	PFNGLVERTEXATTRIB4NUBVPROC fglVertexAttrib4Nubv = nullptr;
	PFNGLVERTEXATTRIB4NUIVPROC fglVertexAttrib4Nuiv = nullptr;
	PFNGLVERTEXATTRIB4NUSVPROC fglVertexAttrib4Nusv = nullptr;
	PFNGLVERTEXATTRIB4BVPROC fglVertexAttrib4bv = nullptr;
	PFNGLVERTEXATTRIB4DPROC fglVertexAttrib4d = nullptr;
	PFNGLVERTEXATTRIB4DVPROC fglVertexAttrib4dv = nullptr;
	PFNGLVERTEXATTRIB4FPROC fglVertexAttrib4f = nullptr;
	PFNGLVERTEXATTRIB4FVPROC fglVertexAttrib4fv = nullptr;
	PFNGLVERTEXATTRIB4IVPROC fglVertexAttrib4iv = nullptr;
	PFNGLVERTEXATTRIB4SPROC fglVertexAttrib4s = nullptr;
	PFNGLVERTEXATTRIB4SVPROC fglVertexAttrib4sv = nullptr;
	PFNGLVERTEXATTRIB4UBVPROC fglVertexAttrib4ubv = nullptr;
	PFNGLVERTEXATTRIB4UIVPROC fglVertexAttrib4uiv = nullptr;
	PFNGLVERTEXATTRIB4USVPROC fglVertexAttrib4usv = nullptr;
	PFNGLVERTEXATTRIBPOINTERPROC fglVertexAttribPointer = nullptr;

	void init(PFN_loadfunc load);
};



class glfn_compat_ver_2_1 : public glfn_compat_ver_2_0 {
public:

	PFNGLUNIFORMMATRIX2X3FVPROC fglUniformMatrix2x3fv = nullptr;
	PFNGLUNIFORMMATRIX3X2FVPROC fglUniformMatrix3x2fv = nullptr;
	PFNGLUNIFORMMATRIX2X4FVPROC fglUniformMatrix2x4fv = nullptr;
	PFNGLUNIFORMMATRIX4X2FVPROC fglUniformMatrix4x2fv = nullptr;
	PFNGLUNIFORMMATRIX3X4FVPROC fglUniformMatrix3x4fv = nullptr;
	PFNGLUNIFORMMATRIX4X3FVPROC fglUniformMatrix4x3fv = nullptr;

	void init(PFN_loadfunc load);
};



class glfn_compat_ver_3_0 : public glfn_compat_ver_2_1 {
public:

	PFNGLCOLORMASKIPROC fglColorMaski = nullptr;
	PFNGLGETBOOLEANI_VPROC fglGetBooleani_v = nullptr;
	PFNGLGETINTEGERI_VPROC fglGetIntegeri_v = nullptr;
	PFNGLENABLEIPROC fglEnablei = nullptr;
	PFNGLDISABLEIPROC fglDisablei = nullptr;
	PFNGLISENABLEDIPROC fglIsEnabledi = nullptr;
	PFNGLBEGINTRANSFORMFEEDBACKPROC fglBeginTransformFeedback = nullptr;
	PFNGLENDTRANSFORMFEEDBACKPROC fglEndTransformFeedback = nullptr;
	PFNGLBINDBUFFERRANGEPROC fglBindBufferRange = nullptr;
	PFNGLBINDBUFFERBASEPROC fglBindBufferBase = nullptr;
	PFNGLTRANSFORMFEEDBACKVARYINGSPROC fglTransformFeedbackVaryings = nullptr;
	PFNGLGETTRANSFORMFEEDBACKVARYINGPROC fglGetTransformFeedbackVarying = nullptr;
	PFNGLCLAMPCOLORPROC fglClampColor = nullptr;
	PFNGLBEGINCONDITIONALRENDERPROC fglBeginConditionalRender = nullptr;
	PFNGLENDCONDITIONALRENDERPROC fglEndConditionalRender = nullptr;
	PFNGLVERTEXATTRIBIPOINTERPROC fglVertexAttribIPointer = nullptr;
	PFNGLGETVERTEXATTRIBIIVPROC fglGetVertexAttribIiv = nullptr;
	PFNGLGETVERTEXATTRIBIUIVPROC fglGetVertexAttribIuiv = nullptr;
	PFNGLVERTEXATTRIBI1IPROC fglVertexAttribI1i = nullptr;
	PFNGLVERTEXATTRIBI2IPROC fglVertexAttribI2i = nullptr;
	PFNGLVERTEXATTRIBI3IPROC fglVertexAttribI3i = nullptr;
	PFNGLVERTEXATTRIBI4IPROC fglVertexAttribI4i = nullptr;
	PFNGLVERTEXATTRIBI1UIPROC fglVertexAttribI1ui = nullptr;
	PFNGLVERTEXATTRIBI2UIPROC fglVertexAttribI2ui = nullptr;
	PFNGLVERTEXATTRIBI3UIPROC fglVertexAttribI3ui = nullptr;
	PFNGLVERTEXATTRIBI4UIPROC fglVertexAttribI4ui = nullptr;
	PFNGLVERTEXATTRIBI1IVPROC fglVertexAttribI1iv = nullptr;
	PFNGLVERTEXATTRIBI2IVPROC fglVertexAttribI2iv = nullptr;
	PFNGLVERTEXATTRIBI3IVPROC fglVertexAttribI3iv = nullptr;
	PFNGLVERTEXATTRIBI4IVPROC fglVertexAttribI4iv = nullptr;
	PFNGLVERTEXATTRIBI1UIVPROC fglVertexAttribI1uiv = nullptr;
	PFNGLVERTEXATTRIBI2UIVPROC fglVertexAttribI2uiv = nullptr;
	PFNGLVERTEXATTRIBI3UIVPROC fglVertexAttribI3uiv = nullptr;
	PFNGLVERTEXATTRIBI4UIVPROC fglVertexAttribI4uiv = nullptr;
	PFNGLVERTEXATTRIBI4BVPROC fglVertexAttribI4bv = nullptr;
	PFNGLVERTEXATTRIBI4SVPROC fglVertexAttribI4sv = nullptr;
	PFNGLVERTEXATTRIBI4UBVPROC fglVertexAttribI4ubv = nullptr;
	PFNGLVERTEXATTRIBI4USVPROC fglVertexAttribI4usv = nullptr;
	PFNGLGETUNIFORMUIVPROC fglGetUniformuiv = nullptr;
	PFNGLBINDFRAGDATALOCATIONPROC fglBindFragDataLocation = nullptr;
	PFNGLGETFRAGDATALOCATIONPROC fglGetFragDataLocation = nullptr;
	PFNGLUNIFORM1UIPROC fglUniform1ui = nullptr;
	PFNGLUNIFORM2UIPROC fglUniform2ui = nullptr;
	PFNGLUNIFORM3UIPROC fglUniform3ui = nullptr;
	PFNGLUNIFORM4UIPROC fglUniform4ui = nullptr;
	PFNGLUNIFORM1UIVPROC fglUniform1uiv = nullptr;
	PFNGLUNIFORM2UIVPROC fglUniform2uiv = nullptr;
	PFNGLUNIFORM3UIVPROC fglUniform3uiv = nullptr;
	PFNGLUNIFORM4UIVPROC fglUniform4uiv = nullptr;
	PFNGLTEXPARAMETERIIVPROC fglTexParameterIiv = nullptr;
	PFNGLTEXPARAMETERIUIVPROC fglTexParameterIuiv = nullptr;
	PFNGLGETTEXPARAMETERIIVPROC fglGetTexParameterIiv = nullptr;
	PFNGLGETTEXPARAMETERIUIVPROC fglGetTexParameterIuiv = nullptr;
	PFNGLCLEARBUFFERIVPROC fglClearBufferiv = nullptr;
	PFNGLCLEARBUFFERUIVPROC fglClearBufferuiv = nullptr;
	PFNGLCLEARBUFFERFVPROC fglClearBufferfv = nullptr;
	PFNGLCLEARBUFFERFIPROC fglClearBufferfi = nullptr;
	PFNGLGETSTRINGIPROC fglGetStringi = nullptr;
	PFNGLISRENDERBUFFERPROC fglIsRenderbuffer = nullptr;
	PFNGLBINDRENDERBUFFERPROC fglBindRenderbuffer = nullptr;
	PFNGLDELETERENDERBUFFERSPROC fglDeleteRenderbuffers = nullptr;
	PFNGLGENRENDERBUFFERSPROC fglGenRenderbuffers = nullptr;
	PFNGLRENDERBUFFERSTORAGEPROC fglRenderbufferStorage = nullptr;
	PFNGLGETRENDERBUFFERPARAMETERIVPROC fglGetRenderbufferParameteriv = nullptr;
	PFNGLISFRAMEBUFFERPROC fglIsFramebuffer = nullptr;
	PFNGLBINDFRAMEBUFFERPROC fglBindFramebuffer = nullptr;
	PFNGLDELETEFRAMEBUFFERSPROC fglDeleteFramebuffers = nullptr;
	PFNGLGENFRAMEBUFFERSPROC fglGenFramebuffers = nullptr;
	PFNGLCHECKFRAMEBUFFERSTATUSPROC fglCheckFramebufferStatus = nullptr;
	PFNGLFRAMEBUFFERTEXTURE1DPROC fglFramebufferTexture1D = nullptr;
	PFNGLFRAMEBUFFERTEXTURE2DPROC fglFramebufferTexture2D = nullptr;
	PFNGLFRAMEBUFFERTEXTURE3DPROC fglFramebufferTexture3D = nullptr;
	PFNGLFRAMEBUFFERRENDERBUFFERPROC fglFramebufferRenderbuffer = nullptr;
	PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC fglGetFramebufferAttachmentParameteriv = nullptr;
	PFNGLGENERATEMIPMAPPROC fglGenerateMipmap = nullptr;
	PFNGLBLITFRAMEBUFFERPROC fglBlitFramebuffer = nullptr;
	PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC fglRenderbufferStorageMultisample = nullptr;
	PFNGLFRAMEBUFFERTEXTURELAYERPROC fglFramebufferTextureLayer = nullptr;
	PFNGLMAPBUFFERRANGEPROC fglMapBufferRange = nullptr;
	PFNGLFLUSHMAPPEDBUFFERRANGEPROC fglFlushMappedBufferRange = nullptr;
	PFNGLBINDVERTEXARRAYPROC fglBindVertexArray = nullptr;
	PFNGLDELETEVERTEXARRAYSPROC fglDeleteVertexArrays = nullptr;
	PFNGLGENVERTEXARRAYSPROC fglGenVertexArrays = nullptr;
	PFNGLISVERTEXARRAYPROC fglIsVertexArray = nullptr;

	void init(PFN_loadfunc load);
};



class glfn_compat_ver_3_1 : public glfn_compat_ver_3_0 {
public:

	PFNGLDRAWARRAYSINSTANCEDPROC fglDrawArraysInstanced = nullptr;
	PFNGLDRAWELEMENTSINSTANCEDPROC fglDrawElementsInstanced = nullptr;
	PFNGLTEXBUFFERPROC fglTexBuffer = nullptr;
	PFNGLPRIMITIVERESTARTINDEXPROC fglPrimitiveRestartIndex = nullptr;
	PFNGLCOPYBUFFERSUBDATAPROC fglCopyBufferSubData = nullptr;
	PFNGLGETUNIFORMINDICESPROC fglGetUniformIndices = nullptr;
	PFNGLGETACTIVEUNIFORMSIVPROC fglGetActiveUniformsiv = nullptr;
	PFNGLGETACTIVEUNIFORMNAMEPROC fglGetActiveUniformName = nullptr;
	PFNGLGETUNIFORMBLOCKINDEXPROC fglGetUniformBlockIndex = nullptr;
	PFNGLGETACTIVEUNIFORMBLOCKIVPROC fglGetActiveUniformBlockiv = nullptr;
	PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC fglGetActiveUniformBlockName = nullptr;
	PFNGLUNIFORMBLOCKBINDINGPROC fglUniformBlockBinding = nullptr;

	void init(PFN_loadfunc load);
};



class glfn_compat_ver_3_2 : public glfn_compat_ver_3_1 {
public:

	PFNGLDRAWELEMENTSBASEVERTEXPROC fglDrawElementsBaseVertex = nullptr;
	PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC fglDrawRangeElementsBaseVertex = nullptr;
	PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC fglDrawElementsInstancedBaseVertex = nullptr;
	PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC fglMultiDrawElementsBaseVertex = nullptr;
	PFNGLPROVOKINGVERTEXPROC fglProvokingVertex = nullptr;
	PFNGLFENCESYNCPROC fglFenceSync = nullptr;
	PFNGLISSYNCPROC fglIsSync = nullptr;
	PFNGLDELETESYNCPROC fglDeleteSync = nullptr;
	PFNGLCLIENTWAITSYNCPROC fglClientWaitSync = nullptr;
	PFNGLWAITSYNCPROC fglWaitSync = nullptr;
	PFNGLGETINTEGER64VPROC fglGetInteger64v = nullptr;
	PFNGLGETSYNCIVPROC fglGetSynciv = nullptr;
	PFNGLGETINTEGER64I_VPROC fglGetInteger64i_v = nullptr;
	PFNGLGETBUFFERPARAMETERI64VPROC fglGetBufferParameteri64v = nullptr;
	PFNGLFRAMEBUFFERTEXTUREPROC fglFramebufferTexture = nullptr;
	PFNGLTEXIMAGE2DMULTISAMPLEPROC fglTexImage2DMultisample = nullptr;
	PFNGLTEXIMAGE3DMULTISAMPLEPROC fglTexImage3DMultisample = nullptr;
	PFNGLGETMULTISAMPLEFVPROC fglGetMultisamplefv = nullptr;
	PFNGLSAMPLEMASKIPROC fglSampleMaski = nullptr;

	void init(PFN_loadfunc load);
};



class glfn_compat_ver_3_3 : public glfn_compat_ver_3_2 {
public:

	PFNGLBINDFRAGDATALOCATIONINDEXEDPROC fglBindFragDataLocationIndexed = nullptr;
	PFNGLGETFRAGDATAINDEXPROC fglGetFragDataIndex = nullptr;
	PFNGLGENSAMPLERSPROC fglGenSamplers = nullptr;
	PFNGLDELETESAMPLERSPROC fglDeleteSamplers = nullptr;
	PFNGLISSAMPLERPROC fglIsSampler = nullptr;
	PFNGLBINDSAMPLERPROC fglBindSampler = nullptr;
	PFNGLSAMPLERPARAMETERIPROC fglSamplerParameteri = nullptr;
	PFNGLSAMPLERPARAMETERIVPROC fglSamplerParameteriv = nullptr;
	PFNGLSAMPLERPARAMETERFPROC fglSamplerParameterf = nullptr;
	PFNGLSAMPLERPARAMETERFVPROC fglSamplerParameterfv = nullptr;
	PFNGLSAMPLERPARAMETERIIVPROC fglSamplerParameterIiv = nullptr;
	PFNGLSAMPLERPARAMETERIUIVPROC fglSamplerParameterIuiv = nullptr;
	PFNGLGETSAMPLERPARAMETERIVPROC fglGetSamplerParameteriv = nullptr;
	PFNGLGETSAMPLERPARAMETERIIVPROC fglGetSamplerParameterIiv = nullptr;
	PFNGLGETSAMPLERPARAMETERFVPROC fglGetSamplerParameterfv = nullptr;
	PFNGLGETSAMPLERPARAMETERIUIVPROC fglGetSamplerParameterIuiv = nullptr;
	PFNGLQUERYCOUNTERPROC fglQueryCounter = nullptr;
	PFNGLGETQUERYOBJECTI64VPROC fglGetQueryObjecti64v = nullptr;
	PFNGLGETQUERYOBJECTUI64VPROC fglGetQueryObjectui64v = nullptr;
	PFNGLVERTEXATTRIBDIVISORPROC fglVertexAttribDivisor = nullptr;
	PFNGLVERTEXATTRIBP1UIPROC fglVertexAttribP1ui = nullptr;
	PFNGLVERTEXATTRIBP1UIVPROC fglVertexAttribP1uiv = nullptr;
	PFNGLVERTEXATTRIBP2UIPROC fglVertexAttribP2ui = nullptr;
	PFNGLVERTEXATTRIBP2UIVPROC fglVertexAttribP2uiv = nullptr;
	PFNGLVERTEXATTRIBP3UIPROC fglVertexAttribP3ui = nullptr;
	PFNGLVERTEXATTRIBP3UIVPROC fglVertexAttribP3uiv = nullptr;
	PFNGLVERTEXATTRIBP4UIPROC fglVertexAttribP4ui = nullptr;
	PFNGLVERTEXATTRIBP4UIVPROC fglVertexAttribP4uiv = nullptr;
	PFNGLVERTEXP2UIPROC fglVertexP2ui = nullptr;
	PFNGLVERTEXP2UIVPROC fglVertexP2uiv = nullptr;
	PFNGLVERTEXP3UIPROC fglVertexP3ui = nullptr;
	PFNGLVERTEXP3UIVPROC fglVertexP3uiv = nullptr;
	PFNGLVERTEXP4UIPROC fglVertexP4ui = nullptr;
	PFNGLVERTEXP4UIVPROC fglVertexP4uiv = nullptr;
	PFNGLTEXCOORDP1UIPROC fglTexCoordP1ui = nullptr;
	PFNGLTEXCOORDP1UIVPROC fglTexCoordP1uiv = nullptr;
	PFNGLTEXCOORDP2UIPROC fglTexCoordP2ui = nullptr;
	PFNGLTEXCOORDP2UIVPROC fglTexCoordP2uiv = nullptr;
	PFNGLTEXCOORDP3UIPROC fglTexCoordP3ui = nullptr;
	PFNGLTEXCOORDP3UIVPROC fglTexCoordP3uiv = nullptr;
	PFNGLTEXCOORDP4UIPROC fglTexCoordP4ui = nullptr;
	PFNGLTEXCOORDP4UIVPROC fglTexCoordP4uiv = nullptr;
	PFNGLMULTITEXCOORDP1UIPROC fglMultiTexCoordP1ui = nullptr;
	PFNGLMULTITEXCOORDP1UIVPROC fglMultiTexCoordP1uiv = nullptr;
	PFNGLMULTITEXCOORDP2UIPROC fglMultiTexCoordP2ui = nullptr;
	PFNGLMULTITEXCOORDP2UIVPROC fglMultiTexCoordP2uiv = nullptr;
	PFNGLMULTITEXCOORDP3UIPROC fglMultiTexCoordP3ui = nullptr;
	PFNGLMULTITEXCOORDP3UIVPROC fglMultiTexCoordP3uiv = nullptr;
	PFNGLMULTITEXCOORDP4UIPROC fglMultiTexCoordP4ui = nullptr;
	PFNGLMULTITEXCOORDP4UIVPROC fglMultiTexCoordP4uiv = nullptr;
	PFNGLNORMALP3UIPROC fglNormalP3ui = nullptr;
	PFNGLNORMALP3UIVPROC fglNormalP3uiv = nullptr;
	PFNGLCOLORP3UIPROC fglColorP3ui = nullptr;
	PFNGLCOLORP3UIVPROC fglColorP3uiv = nullptr;
	PFNGLCOLORP4UIPROC fglColorP4ui = nullptr;
	PFNGLCOLORP4UIVPROC fglColorP4uiv = nullptr;
	PFNGLSECONDARYCOLORP3UIPROC fglSecondaryColorP3ui = nullptr;
	PFNGLSECONDARYCOLORP3UIVPROC fglSecondaryColorP3uiv = nullptr;

	void init(PFN_loadfunc load);
};



class glfn_compat_ver_4_0 : public glfn_compat_ver_3_3 {
public:

	PFNGLMINSAMPLESHADINGPROC fglMinSampleShading = nullptr;
	PFNGLBLENDEQUATIONIPROC fglBlendEquationi = nullptr;
	PFNGLBLENDEQUATIONSEPARATEIPROC fglBlendEquationSeparatei = nullptr;
	PFNGLBLENDFUNCIPROC fglBlendFunci = nullptr;
	PFNGLBLENDFUNCSEPARATEIPROC fglBlendFuncSeparatei = nullptr;
	PFNGLDRAWARRAYSINDIRECTPROC fglDrawArraysIndirect = nullptr;
	PFNGLDRAWELEMENTSINDIRECTPROC fglDrawElementsIndirect = nullptr;
	PFNGLUNIFORM1DPROC fglUniform1d = nullptr;
	PFNGLUNIFORM2DPROC fglUniform2d = nullptr;
	PFNGLUNIFORM3DPROC fglUniform3d = nullptr;
	PFNGLUNIFORM4DPROC fglUniform4d = nullptr;
	PFNGLUNIFORM1DVPROC fglUniform1dv = nullptr;
	PFNGLUNIFORM2DVPROC fglUniform2dv = nullptr;
	PFNGLUNIFORM3DVPROC fglUniform3dv = nullptr;
	PFNGLUNIFORM4DVPROC fglUniform4dv = nullptr;
	PFNGLUNIFORMMATRIX2DVPROC fglUniformMatrix2dv = nullptr;
	PFNGLUNIFORMMATRIX3DVPROC fglUniformMatrix3dv = nullptr;
	PFNGLUNIFORMMATRIX4DVPROC fglUniformMatrix4dv = nullptr;
	PFNGLUNIFORMMATRIX2X3DVPROC fglUniformMatrix2x3dv = nullptr;
	PFNGLUNIFORMMATRIX2X4DVPROC fglUniformMatrix2x4dv = nullptr;
	PFNGLUNIFORMMATRIX3X2DVPROC fglUniformMatrix3x2dv = nullptr;
	PFNGLUNIFORMMATRIX3X4DVPROC fglUniformMatrix3x4dv = nullptr;
	PFNGLUNIFORMMATRIX4X2DVPROC fglUniformMatrix4x2dv = nullptr;
	PFNGLUNIFORMMATRIX4X3DVPROC fglUniformMatrix4x3dv = nullptr;
	PFNGLGETUNIFORMDVPROC fglGetUniformdv = nullptr;
	PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC fglGetSubroutineUniformLocation = nullptr;
	PFNGLGETSUBROUTINEINDEXPROC fglGetSubroutineIndex = nullptr;
	PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC fglGetActiveSubroutineUniformiv = nullptr;
	PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC fglGetActiveSubroutineUniformName = nullptr;
	PFNGLGETACTIVESUBROUTINENAMEPROC fglGetActiveSubroutineName = nullptr;
	PFNGLUNIFORMSUBROUTINESUIVPROC fglUniformSubroutinesuiv = nullptr;
	PFNGLGETUNIFORMSUBROUTINEUIVPROC fglGetUniformSubroutineuiv = nullptr;
	PFNGLGETPROGRAMSTAGEIVPROC fglGetProgramStageiv = nullptr;
	PFNGLPATCHPARAMETERIPROC fglPatchParameteri = nullptr;
	PFNGLPATCHPARAMETERFVPROC fglPatchParameterfv = nullptr;
	PFNGLBINDTRANSFORMFEEDBACKPROC fglBindTransformFeedback = nullptr;
	PFNGLDELETETRANSFORMFEEDBACKSPROC fglDeleteTransformFeedbacks = nullptr;
	PFNGLGENTRANSFORMFEEDBACKSPROC fglGenTransformFeedbacks = nullptr;
	PFNGLISTRANSFORMFEEDBACKPROC fglIsTransformFeedback = nullptr;
	PFNGLPAUSETRANSFORMFEEDBACKPROC fglPauseTransformFeedback = nullptr;
	PFNGLRESUMETRANSFORMFEEDBACKPROC fglResumeTransformFeedback = nullptr;
	PFNGLDRAWTRANSFORMFEEDBACKPROC fglDrawTransformFeedback = nullptr;
	PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC fglDrawTransformFeedbackStream = nullptr;
	PFNGLBEGINQUERYINDEXEDPROC fglBeginQueryIndexed = nullptr;
	PFNGLENDQUERYINDEXEDPROC fglEndQueryIndexed = nullptr;
	PFNGLGETQUERYINDEXEDIVPROC fglGetQueryIndexediv = nullptr;

	void init(PFN_loadfunc load);
};



class glfn_compat_ver_4_1 : public glfn_compat_ver_4_0 {
public:

	PFNGLRELEASESHADERCOMPILERPROC fglReleaseShaderCompiler = nullptr;
	PFNGLSHADERBINARYPROC fglShaderBinary = nullptr;
	PFNGLGETSHADERPRECISIONFORMATPROC fglGetShaderPrecisionFormat = nullptr;
	PFNGLDEPTHRANGEFPROC fglDepthRangef = nullptr;
	PFNGLCLEARDEPTHFPROC fglClearDepthf = nullptr;
	PFNGLGETPROGRAMBINARYPROC fglGetProgramBinary = nullptr;
	PFNGLPROGRAMBINARYPROC fglProgramBinary = nullptr;
	PFNGLPROGRAMPARAMETERIPROC fglProgramParameteri = nullptr;
	PFNGLUSEPROGRAMSTAGESPROC fglUseProgramStages = nullptr;
	PFNGLACTIVESHADERPROGRAMPROC fglActiveShaderProgram = nullptr;
	PFNGLCREATESHADERPROGRAMVPROC fglCreateShaderProgramv = nullptr;
	PFNGLBINDPROGRAMPIPELINEPROC fglBindProgramPipeline = nullptr;
	PFNGLDELETEPROGRAMPIPELINESPROC fglDeleteProgramPipelines = nullptr;
	PFNGLGENPROGRAMPIPELINESPROC fglGenProgramPipelines = nullptr;
	PFNGLISPROGRAMPIPELINEPROC fglIsProgramPipeline = nullptr;
	PFNGLGETPROGRAMPIPELINEIVPROC fglGetProgramPipelineiv = nullptr;
	PFNGLPROGRAMUNIFORM1IPROC fglProgramUniform1i = nullptr;
	PFNGLPROGRAMUNIFORM1IVPROC fglProgramUniform1iv = nullptr;
	PFNGLPROGRAMUNIFORM1FPROC fglProgramUniform1f = nullptr;
	PFNGLPROGRAMUNIFORM1FVPROC fglProgramUniform1fv = nullptr;
	PFNGLPROGRAMUNIFORM1DPROC fglProgramUniform1d = nullptr;
	PFNGLPROGRAMUNIFORM1DVPROC fglProgramUniform1dv = nullptr;
	PFNGLPROGRAMUNIFORM1UIPROC fglProgramUniform1ui = nullptr;
	PFNGLPROGRAMUNIFORM1UIVPROC fglProgramUniform1uiv = nullptr;
	PFNGLPROGRAMUNIFORM2IPROC fglProgramUniform2i = nullptr;
	PFNGLPROGRAMUNIFORM2IVPROC fglProgramUniform2iv = nullptr;
	PFNGLPROGRAMUNIFORM2FPROC fglProgramUniform2f = nullptr;
	PFNGLPROGRAMUNIFORM2FVPROC fglProgramUniform2fv = nullptr;
	PFNGLPROGRAMUNIFORM2DPROC fglProgramUniform2d = nullptr;
	PFNGLPROGRAMUNIFORM2DVPROC fglProgramUniform2dv = nullptr;
	PFNGLPROGRAMUNIFORM2UIPROC fglProgramUniform2ui = nullptr;
	PFNGLPROGRAMUNIFORM2UIVPROC fglProgramUniform2uiv = nullptr;
	PFNGLPROGRAMUNIFORM3IPROC fglProgramUniform3i = nullptr;
	PFNGLPROGRAMUNIFORM3IVPROC fglProgramUniform3iv = nullptr;
	PFNGLPROGRAMUNIFORM3FPROC fglProgramUniform3f = nullptr;
	PFNGLPROGRAMUNIFORM3FVPROC fglProgramUniform3fv = nullptr;
	PFNGLPROGRAMUNIFORM3DPROC fglProgramUniform3d = nullptr;
	PFNGLPROGRAMUNIFORM3DVPROC fglProgramUniform3dv = nullptr;
	PFNGLPROGRAMUNIFORM3UIPROC fglProgramUniform3ui = nullptr;
	PFNGLPROGRAMUNIFORM3UIVPROC fglProgramUniform3uiv = nullptr;
	PFNGLPROGRAMUNIFORM4IPROC fglProgramUniform4i = nullptr;
	PFNGLPROGRAMUNIFORM4IVPROC fglProgramUniform4iv = nullptr;
	PFNGLPROGRAMUNIFORM4FPROC fglProgramUniform4f = nullptr;
	PFNGLPROGRAMUNIFORM4FVPROC fglProgramUniform4fv = nullptr;
	PFNGLPROGRAMUNIFORM4DPROC fglProgramUniform4d = nullptr;
	PFNGLPROGRAMUNIFORM4DVPROC fglProgramUniform4dv = nullptr;
	PFNGLPROGRAMUNIFORM4UIPROC fglProgramUniform4ui = nullptr;
	PFNGLPROGRAMUNIFORM4UIVPROC fglProgramUniform4uiv = nullptr;
	PFNGLPROGRAMUNIFORMMATRIX2FVPROC fglProgramUniformMatrix2fv = nullptr;
	PFNGLPROGRAMUNIFORMMATRIX3FVPROC fglProgramUniformMatrix3fv = nullptr;
	PFNGLPROGRAMUNIFORMMATRIX4FVPROC fglProgramUniformMatrix4fv = nullptr;
	PFNGLPROGRAMUNIFORMMATRIX2DVPROC fglProgramUniformMatrix2dv = nullptr;
	PFNGLPROGRAMUNIFORMMATRIX3DVPROC fglProgramUniformMatrix3dv = nullptr;
	PFNGLPROGRAMUNIFORMMATRIX4DVPROC fglProgramUniformMatrix4dv = nullptr;
	PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC fglProgramUniformMatrix2x3fv = nullptr;
	PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC fglProgramUniformMatrix3x2fv = nullptr;
	PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC fglProgramUniformMatrix2x4fv = nullptr;
	PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC fglProgramUniformMatrix4x2fv = nullptr;
	PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC fglProgramUniformMatrix3x4fv = nullptr;
	PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC fglProgramUniformMatrix4x3fv = nullptr;
	PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC fglProgramUniformMatrix2x3dv = nullptr;
	PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC fglProgramUniformMatrix3x2dv = nullptr;
	PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC fglProgramUniformMatrix2x4dv = nullptr;
	PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC fglProgramUniformMatrix4x2dv = nullptr;
	PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC fglProgramUniformMatrix3x4dv = nullptr;
	PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC fglProgramUniformMatrix4x3dv = nullptr;
	PFNGLVALIDATEPROGRAMPIPELINEPROC fglValidateProgramPipeline = nullptr;
	PFNGLGETPROGRAMPIPELINEINFOLOGPROC fglGetProgramPipelineInfoLog = nullptr;
	PFNGLVERTEXATTRIBL1DPROC fglVertexAttribL1d = nullptr;
	PFNGLVERTEXATTRIBL2DPROC fglVertexAttribL2d = nullptr;
	PFNGLVERTEXATTRIBL3DPROC fglVertexAttribL3d = nullptr;
	PFNGLVERTEXATTRIBL4DPROC fglVertexAttribL4d = nullptr;
	PFNGLVERTEXATTRIBL1DVPROC fglVertexAttribL1dv = nullptr;
	PFNGLVERTEXATTRIBL2DVPROC fglVertexAttribL2dv = nullptr;
	PFNGLVERTEXATTRIBL3DVPROC fglVertexAttribL3dv = nullptr;
	PFNGLVERTEXATTRIBL4DVPROC fglVertexAttribL4dv = nullptr;
	PFNGLVERTEXATTRIBLPOINTERPROC fglVertexAttribLPointer = nullptr;
	PFNGLGETVERTEXATTRIBLDVPROC fglGetVertexAttribLdv = nullptr;
	PFNGLVIEWPORTARRAYVPROC fglViewportArrayv = nullptr;
	PFNGLVIEWPORTINDEXEDFPROC fglViewportIndexedf = nullptr;
	PFNGLVIEWPORTINDEXEDFVPROC fglViewportIndexedfv = nullptr;
	PFNGLSCISSORARRAYVPROC fglScissorArrayv = nullptr;
	PFNGLSCISSORINDEXEDPROC fglScissorIndexed = nullptr;
	PFNGLSCISSORINDEXEDVPROC fglScissorIndexedv = nullptr;
	PFNGLDEPTHRANGEARRAYVPROC fglDepthRangeArrayv = nullptr;
	PFNGLDEPTHRANGEINDEXEDPROC fglDepthRangeIndexed = nullptr;
	PFNGLGETFLOATI_VPROC fglGetFloati_v = nullptr;
	PFNGLGETDOUBLEI_VPROC fglGetDoublei_v = nullptr;

	void init(PFN_loadfunc load);
};



class glfn_compat_ver_4_2 : public glfn_compat_ver_4_1 {
public:

	PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC fglDrawArraysInstancedBaseInstance = nullptr;
	PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC fglDrawElementsInstancedBaseInstance = nullptr;
	PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC fglDrawElementsInstancedBaseVertexBaseInstance = nullptr;
	PFNGLGETINTERNALFORMATIVPROC fglGetInternalformativ = nullptr;
	PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC fglGetActiveAtomicCounterBufferiv = nullptr;
	PFNGLBINDIMAGETEXTUREPROC fglBindImageTexture = nullptr;
	PFNGLMEMORYBARRIERPROC fglMemoryBarrier = nullptr;
	PFNGLTEXSTORAGE1DPROC fglTexStorage1D = nullptr;
	PFNGLTEXSTORAGE2DPROC fglTexStorage2D = nullptr;
	PFNGLTEXSTORAGE3DPROC fglTexStorage3D = nullptr;
	PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC fglDrawTransformFeedbackInstanced = nullptr;
	PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC fglDrawTransformFeedbackStreamInstanced = nullptr;

	void init(PFN_loadfunc load);
};



class glfn_compat_ver_4_3 : public glfn_compat_ver_4_2 {
public:

	PFNGLCLEARBUFFERDATAPROC fglClearBufferData = nullptr;
	PFNGLCLEARBUFFERSUBDATAPROC fglClearBufferSubData = nullptr;
	PFNGLDISPATCHCOMPUTEPROC fglDispatchCompute = nullptr;
	PFNGLDISPATCHCOMPUTEINDIRECTPROC fglDispatchComputeIndirect = nullptr;
	PFNGLCOPYIMAGESUBDATAPROC fglCopyImageSubData = nullptr;
	PFNGLFRAMEBUFFERPARAMETERIPROC fglFramebufferParameteri = nullptr;
	PFNGLGETFRAMEBUFFERPARAMETERIVPROC fglGetFramebufferParameteriv = nullptr;
	PFNGLGETINTERNALFORMATI64VPROC fglGetInternalformati64v = nullptr;
	PFNGLINVALIDATETEXSUBIMAGEPROC fglInvalidateTexSubImage = nullptr;
	PFNGLINVALIDATETEXIMAGEPROC fglInvalidateTexImage = nullptr;
	PFNGLINVALIDATEBUFFERSUBDATAPROC fglInvalidateBufferSubData = nullptr;
	PFNGLINVALIDATEBUFFERDATAPROC fglInvalidateBufferData = nullptr;
	PFNGLINVALIDATEFRAMEBUFFERPROC fglInvalidateFramebuffer = nullptr;
	PFNGLINVALIDATESUBFRAMEBUFFERPROC fglInvalidateSubFramebuffer = nullptr;
	PFNGLMULTIDRAWARRAYSINDIRECTPROC fglMultiDrawArraysIndirect = nullptr;
	PFNGLMULTIDRAWELEMENTSINDIRECTPROC fglMultiDrawElementsIndirect = nullptr;
	PFNGLGETPROGRAMINTERFACEIVPROC fglGetProgramInterfaceiv = nullptr;
	PFNGLGETPROGRAMRESOURCEINDEXPROC fglGetProgramResourceIndex = nullptr;
	PFNGLGETPROGRAMRESOURCENAMEPROC fglGetProgramResourceName = nullptr;
	PFNGLGETPROGRAMRESOURCEIVPROC fglGetProgramResourceiv = nullptr;
	PFNGLGETPROGRAMRESOURCELOCATIONPROC fglGetProgramResourceLocation = nullptr;
	PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC fglGetProgramResourceLocationIndex = nullptr;
	PFNGLSHADERSTORAGEBLOCKBINDINGPROC fglShaderStorageBlockBinding = nullptr;
	PFNGLTEXBUFFERRANGEPROC fglTexBufferRange = nullptr;
	PFNGLTEXSTORAGE2DMULTISAMPLEPROC fglTexStorage2DMultisample = nullptr;
	PFNGLTEXSTORAGE3DMULTISAMPLEPROC fglTexStorage3DMultisample = nullptr;
	PFNGLTEXTUREVIEWPROC fglTextureView = nullptr;
	PFNGLBINDVERTEXBUFFERPROC fglBindVertexBuffer = nullptr;
	PFNGLVERTEXATTRIBFORMATPROC fglVertexAttribFormat = nullptr;
	PFNGLVERTEXATTRIBIFORMATPROC fglVertexAttribIFormat = nullptr;
	PFNGLVERTEXATTRIBLFORMATPROC fglVertexAttribLFormat = nullptr;
	PFNGLVERTEXATTRIBBINDINGPROC fglVertexAttribBinding = nullptr;
	PFNGLVERTEXBINDINGDIVISORPROC fglVertexBindingDivisor = nullptr;
	PFNGLDEBUGMESSAGECONTROLPROC fglDebugMessageControl = nullptr;
	PFNGLDEBUGMESSAGEINSERTPROC fglDebugMessageInsert = nullptr;
	PFNGLDEBUGMESSAGECALLBACKPROC fglDebugMessageCallback = nullptr;
	PFNGLGETDEBUGMESSAGELOGPROC fglGetDebugMessageLog = nullptr;
	PFNGLPUSHDEBUGGROUPPROC fglPushDebugGroup = nullptr;
	PFNGLPOPDEBUGGROUPPROC fglPopDebugGroup = nullptr;
	PFNGLOBJECTLABELPROC fglObjectLabel = nullptr;
	PFNGLGETOBJECTLABELPROC fglGetObjectLabel = nullptr;
	PFNGLOBJECTPTRLABELPROC fglObjectPtrLabel = nullptr;
	PFNGLGETOBJECTPTRLABELPROC fglGetObjectPtrLabel = nullptr;

	void init(PFN_loadfunc load);
};



class glfn_compat_ver_4_4 : public glfn_compat_ver_4_3 {
public:

	PFNGLBUFFERSTORAGEPROC fglBufferStorage = nullptr;
	PFNGLCLEARTEXIMAGEPROC fglClearTexImage = nullptr;
	PFNGLCLEARTEXSUBIMAGEPROC fglClearTexSubImage = nullptr;
	PFNGLBINDBUFFERSBASEPROC fglBindBuffersBase = nullptr;
	PFNGLBINDBUFFERSRANGEPROC fglBindBuffersRange = nullptr;
	PFNGLBINDTEXTURESPROC fglBindTextures = nullptr;
	PFNGLBINDSAMPLERSPROC fglBindSamplers = nullptr;
	PFNGLBINDIMAGETEXTURESPROC fglBindImageTextures = nullptr;
	PFNGLBINDVERTEXBUFFERSPROC fglBindVertexBuffers = nullptr;

	void init(PFN_loadfunc load);
};



class glfn_compat_ver_4_5 : public glfn_compat_ver_4_4 {
public:

	PFNGLCLIPCONTROLPROC fglClipControl = nullptr;
	PFNGLCREATETRANSFORMFEEDBACKSPROC fglCreateTransformFeedbacks = nullptr;
	PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC fglTransformFeedbackBufferBase = nullptr;
	PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC fglTransformFeedbackBufferRange = nullptr;
	PFNGLGETTRANSFORMFEEDBACKIVPROC fglGetTransformFeedbackiv = nullptr;
	PFNGLGETTRANSFORMFEEDBACKI_VPROC fglGetTransformFeedbacki_v = nullptr;
	PFNGLGETTRANSFORMFEEDBACKI64_VPROC fglGetTransformFeedbacki64_v = nullptr;
	PFNGLCREATEBUFFERSPROC fglCreateBuffers = nullptr;
	PFNGLNAMEDBUFFERSTORAGEPROC fglNamedBufferStorage = nullptr;
	PFNGLNAMEDBUFFERDATAPROC fglNamedBufferData = nullptr;
	PFNGLNAMEDBUFFERSUBDATAPROC fglNamedBufferSubData = nullptr;
	PFNGLCOPYNAMEDBUFFERSUBDATAPROC fglCopyNamedBufferSubData = nullptr;
	PFNGLCLEARNAMEDBUFFERDATAPROC fglClearNamedBufferData = nullptr;
	PFNGLCLEARNAMEDBUFFERSUBDATAPROC fglClearNamedBufferSubData = nullptr;
	PFNGLMAPNAMEDBUFFERPROC fglMapNamedBuffer = nullptr;
	PFNGLMAPNAMEDBUFFERRANGEPROC fglMapNamedBufferRange = nullptr;
	PFNGLUNMAPNAMEDBUFFERPROC fglUnmapNamedBuffer = nullptr;
	PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC fglFlushMappedNamedBufferRange = nullptr;
	PFNGLGETNAMEDBUFFERPARAMETERIVPROC fglGetNamedBufferParameteriv = nullptr;
	PFNGLGETNAMEDBUFFERPARAMETERI64VPROC fglGetNamedBufferParameteri64v = nullptr;
	PFNGLGETNAMEDBUFFERPOINTERVPROC fglGetNamedBufferPointerv = nullptr;
	PFNGLGETNAMEDBUFFERSUBDATAPROC fglGetNamedBufferSubData = nullptr;
	PFNGLCREATEFRAMEBUFFERSPROC fglCreateFramebuffers = nullptr;
	PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC fglNamedFramebufferRenderbuffer = nullptr;
	PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC fglNamedFramebufferParameteri = nullptr;
	PFNGLNAMEDFRAMEBUFFERTEXTUREPROC fglNamedFramebufferTexture = nullptr;
	PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC fglNamedFramebufferTextureLayer = nullptr;
	PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC fglNamedFramebufferDrawBuffer = nullptr;
	PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC fglNamedFramebufferDrawBuffers = nullptr;
	PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC fglNamedFramebufferReadBuffer = nullptr;
	PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC fglInvalidateNamedFramebufferData = nullptr;
	PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC fglInvalidateNamedFramebufferSubData = nullptr;
	PFNGLCLEARNAMEDFRAMEBUFFERIVPROC fglClearNamedFramebufferiv = nullptr;
	PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC fglClearNamedFramebufferuiv = nullptr;
	PFNGLCLEARNAMEDFRAMEBUFFERFVPROC fglClearNamedFramebufferfv = nullptr;
	PFNGLCLEARNAMEDFRAMEBUFFERFIPROC fglClearNamedFramebufferfi = nullptr;
	PFNGLBLITNAMEDFRAMEBUFFERPROC fglBlitNamedFramebuffer = nullptr;
	PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC fglCheckNamedFramebufferStatus = nullptr;
	PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC fglGetNamedFramebufferParameteriv = nullptr;
	PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC fglGetNamedFramebufferAttachmentParameteriv = nullptr;
	PFNGLCREATERENDERBUFFERSPROC fglCreateRenderbuffers = nullptr;
	PFNGLNAMEDRENDERBUFFERSTORAGEPROC fglNamedRenderbufferStorage = nullptr;
	PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC fglNamedRenderbufferStorageMultisample = nullptr;
	PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC fglGetNamedRenderbufferParameteriv = nullptr;
	PFNGLCREATETEXTURESPROC fglCreateTextures = nullptr;
	PFNGLTEXTUREBUFFERPROC fglTextureBuffer = nullptr;
	PFNGLTEXTUREBUFFERRANGEPROC fglTextureBufferRange = nullptr;
	PFNGLTEXTURESTORAGE1DPROC fglTextureStorage1D = nullptr;
	PFNGLTEXTURESTORAGE2DPROC fglTextureStorage2D = nullptr;
	PFNGLTEXTURESTORAGE3DPROC fglTextureStorage3D = nullptr;
	PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC fglTextureStorage2DMultisample = nullptr;
	PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC fglTextureStorage3DMultisample = nullptr;
	PFNGLTEXTURESUBIMAGE1DPROC fglTextureSubImage1D = nullptr;
	PFNGLTEXTURESUBIMAGE2DPROC fglTextureSubImage2D = nullptr;
	PFNGLTEXTURESUBIMAGE3DPROC fglTextureSubImage3D = nullptr;
	PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC fglCompressedTextureSubImage1D = nullptr;
	PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC fglCompressedTextureSubImage2D = nullptr;
	PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC fglCompressedTextureSubImage3D = nullptr;
	PFNGLCOPYTEXTURESUBIMAGE1DPROC fglCopyTextureSubImage1D = nullptr;
	PFNGLCOPYTEXTURESUBIMAGE2DPROC fglCopyTextureSubImage2D = nullptr;
	PFNGLCOPYTEXTURESUBIMAGE3DPROC fglCopyTextureSubImage3D = nullptr;
	PFNGLTEXTUREPARAMETERFPROC fglTextureParameterf = nullptr;
	PFNGLTEXTUREPARAMETERFVPROC fglTextureParameterfv = nullptr;
	PFNGLTEXTUREPARAMETERIPROC fglTextureParameteri = nullptr;
	PFNGLTEXTUREPARAMETERIIVPROC fglTextureParameterIiv = nullptr;
	PFNGLTEXTUREPARAMETERIUIVPROC fglTextureParameterIuiv = nullptr;
	PFNGLTEXTUREPARAMETERIVPROC fglTextureParameteriv = nullptr;
	PFNGLGENERATETEXTUREMIPMAPPROC fglGenerateTextureMipmap = nullptr;
	PFNGLBINDTEXTUREUNITPROC fglBindTextureUnit = nullptr;
	PFNGLGETTEXTUREIMAGEPROC fglGetTextureImage = nullptr;
	PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC fglGetCompressedTextureImage = nullptr;
	PFNGLGETTEXTURELEVELPARAMETERFVPROC fglGetTextureLevelParameterfv = nullptr;
	PFNGLGETTEXTURELEVELPARAMETERIVPROC fglGetTextureLevelParameteriv = nullptr;
	PFNGLGETTEXTUREPARAMETERFVPROC fglGetTextureParameterfv = nullptr;
	PFNGLGETTEXTUREPARAMETERIIVPROC fglGetTextureParameterIiv = nullptr;
	PFNGLGETTEXTUREPARAMETERIUIVPROC fglGetTextureParameterIuiv = nullptr;
	PFNGLGETTEXTUREPARAMETERIVPROC fglGetTextureParameteriv = nullptr;
	PFNGLCREATEVERTEXARRAYSPROC fglCreateVertexArrays = nullptr;
	PFNGLDISABLEVERTEXARRAYATTRIBPROC fglDisableVertexArrayAttrib = nullptr;
	PFNGLENABLEVERTEXARRAYATTRIBPROC fglEnableVertexArrayAttrib = nullptr;
	PFNGLVERTEXARRAYELEMENTBUFFERPROC fglVertexArrayElementBuffer = nullptr;
	PFNGLVERTEXARRAYVERTEXBUFFERPROC fglVertexArrayVertexBuffer = nullptr;
	PFNGLVERTEXARRAYVERTEXBUFFERSPROC fglVertexArrayVertexBuffers = nullptr;
	PFNGLVERTEXARRAYATTRIBBINDINGPROC fglVertexArrayAttribBinding = nullptr;
	PFNGLVERTEXARRAYATTRIBFORMATPROC fglVertexArrayAttribFormat = nullptr;
	PFNGLVERTEXARRAYATTRIBIFORMATPROC fglVertexArrayAttribIFormat = nullptr;
	PFNGLVERTEXARRAYATTRIBLFORMATPROC fglVertexArrayAttribLFormat = nullptr;
	PFNGLVERTEXARRAYBINDINGDIVISORPROC fglVertexArrayBindingDivisor = nullptr;
	PFNGLGETVERTEXARRAYIVPROC fglGetVertexArrayiv = nullptr;
	PFNGLGETVERTEXARRAYINDEXEDIVPROC fglGetVertexArrayIndexediv = nullptr;
	PFNGLGETVERTEXARRAYINDEXED64IVPROC fglGetVertexArrayIndexed64iv = nullptr;
	PFNGLCREATESAMPLERSPROC fglCreateSamplers = nullptr;
	PFNGLCREATEPROGRAMPIPELINESPROC fglCreateProgramPipelines = nullptr;
	PFNGLCREATEQUERIESPROC fglCreateQueries = nullptr;
	PFNGLGETQUERYBUFFEROBJECTI64VPROC fglGetQueryBufferObjecti64v = nullptr;
	PFNGLGETQUERYBUFFEROBJECTIVPROC fglGetQueryBufferObjectiv = nullptr;
	PFNGLGETQUERYBUFFEROBJECTUI64VPROC fglGetQueryBufferObjectui64v = nullptr;
	PFNGLGETQUERYBUFFEROBJECTUIVPROC fglGetQueryBufferObjectuiv = nullptr;
	PFNGLMEMORYBARRIERBYREGIONPROC fglMemoryBarrierByRegion = nullptr;
	PFNGLGETTEXTURESUBIMAGEPROC fglGetTextureSubImage = nullptr;
	PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC fglGetCompressedTextureSubImage = nullptr;
	PFNGLGETGRAPHICSRESETSTATUSPROC fglGetGraphicsResetStatus = nullptr;
	PFNGLGETNCOMPRESSEDTEXIMAGEPROC fglGetnCompressedTexImage = nullptr;
	PFNGLGETNTEXIMAGEPROC fglGetnTexImage = nullptr;
	PFNGLGETNUNIFORMDVPROC fglGetnUniformdv = nullptr;
	PFNGLGETNUNIFORMFVPROC fglGetnUniformfv = nullptr;
	PFNGLGETNUNIFORMIVPROC fglGetnUniformiv = nullptr;
	PFNGLGETNUNIFORMUIVPROC fglGetnUniformuiv = nullptr;
	PFNGLREADNPIXELSPROC fglReadnPixels = nullptr;
	PFNGLGETNMAPDVPROC fglGetnMapdv = nullptr;
	PFNGLGETNMAPFVPROC fglGetnMapfv = nullptr;
	PFNGLGETNMAPIVPROC fglGetnMapiv = nullptr;
	PFNGLGETNPIXELMAPFVPROC fglGetnPixelMapfv = nullptr;
	PFNGLGETNPIXELMAPUIVPROC fglGetnPixelMapuiv = nullptr;
	PFNGLGETNPIXELMAPUSVPROC fglGetnPixelMapusv = nullptr;
	PFNGLGETNPOLYGONSTIPPLEPROC fglGetnPolygonStipple = nullptr;
	PFNGLGETNCOLORTABLEPROC fglGetnColorTable = nullptr;
	PFNGLGETNCONVOLUTIONFILTERPROC fglGetnConvolutionFilter = nullptr;
	PFNGLGETNSEPARABLEFILTERPROC fglGetnSeparableFilter = nullptr;
	PFNGLGETNHISTOGRAMPROC fglGetnHistogram = nullptr;
	PFNGLGETNMINMAXPROC fglGetnMinmax = nullptr;
	PFNGLTEXTUREBARRIERPROC fglTextureBarrier = nullptr;

	void init(PFN_loadfunc load);
};



class glfn_compat_ver_4_6 : public glfn_compat_ver_4_5 {
public:

	PFNGLSPECIALIZESHADERPROC fglSpecializeShader = nullptr;
	PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC fglMultiDrawArraysIndirectCount = nullptr;
	PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC fglMultiDrawElementsIndirectCount = nullptr;
	PFNGLPOLYGONOFFSETCLAMPPROC fglPolygonOffsetClamp = nullptr;

	void init(PFN_loadfunc load);
};
